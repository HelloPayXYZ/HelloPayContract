/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  UnoswapRouter,
  UnoswapRouterInterface,
} from "../../../../contracts/external/AggregationRouterV5.sol/UnoswapRouter";

const _abi = [
  {
    inputs: [],
    name: "EthDepositRejected",
    type: "error",
  },
  {
    inputs: [],
    name: "ReservesCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ReturnAmountIsNotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "SafePermitBadLength",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAmountTooLarge",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "unoswap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "unoswapTo",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "unoswapToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a36806100206000396000f3fe6080604052600436106100385760003560e01c80630502b1c51461004c5780633c15fd9114610071578063f78dc2531461009157600080fd5b36610047576100456100a4565b005b600080fd5b61005f61005a366004610845565b6100df565b60405190815260200160405180910390f35b34801561007d57600080fd5b5061005f61008c3660046108af565b6100f9565b61005f61009f366004610984565b610137565b3233036100dd576040517f1b10b0f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60006100ef338787878787610152565b9695505050505050565b600061011c73ffffffffffffffffffffffffffffffffffffffff891684846106bc565b61012a898989898989610152565b9998505050505050505050565b6000610147878787878787610152565b979650505050505050565b60006102a5565b3d6000803e3d6000fd5b8061017057610170610159565b600160005114601f3d11163d1517806101ad577ff27f64e40000000000000000000000000000000000000000000000000000000060005260046000fd5b5050565b7f0902f1ac0000000000000000000000000000000000000000000000000000000081526000604082600484875afa6101eb576101eb610159565b60603d1461021d577f85cd58dc0000000000000000000000000000000000000000000000000000000060005260046000fd5b81516020830151861561022c57905b8785029250633b9aca008202830181840204925050507f022c0d9f000000000000000000000000000000000000000000000000000000008252841594508415810260048301528481026024830152866044830152608060648301526000608483015260008060a4846000885af16100ef576100ef610159565b6dffffffffffffffffffffffffffff8511156102e5577fcf0b4d3a0000000000000000000000000000000000000000000000000000000060005260046000fd5b60405160c081016040528260051b840184358860008114610394573415610330577f1841b4e10000000000000000000000000000000000000000000000000000000060005260046000fd5b7f23b872dd00000000000000000000000000000000000000000000000000000000845233600485015273ffffffffffffffffffffffffffffffffffffffff8216602485015288604485015261038f6020600060648760008f5af1610163565b610482565b3489146103c5577f1841b4e10000000000000000000000000000000000000000000000000000000060005260046000fd5b7fd0e30db00000000000000000000000000000000000000000000000000000000084526000806004868c73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af161041257610412610159565b7fa9059cbb00000000000000000000000000000000000000000000000000000000845273ffffffffffffffffffffffffffffffffffffffff82166004850152886024850152600080604486600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af161048257610482610159565b50879350602086015b8281101561051a57803561050e73ffffffffffffffffffffffffffffffffffffffff821677ffffffff0000000000000000000000000000000000000000851660a01c7f8000000000000000000000000000000000000000000000000000000000000000861673ffffffffffffffffffffffffffffffffffffffff87168a8a6101b1565b9550915060200161048b565b507f400000000000000000000000000000000000000000000000000000000000000081168015610618576105a73077ffffffff0000000000000000000000000000000000000000841660a01c7f8000000000000000000000000000000000000000000000000000000000000000851673ffffffffffffffffffffffffffffffffffffffff861689896101b1565b94507f2e1a7d4d000000000000000000000000000000000000000000000000000000008452846004850152600080602486600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af16105fd576105fd610159565b600080600080888f5af161061357610613610159565b61067e565b61067b8b77ffffffff0000000000000000000000000000000000000000841660a01c7f8000000000000000000000000000000000000000000000000000000000000000851673ffffffffffffffffffffffffffffffffffffffff861689896101b1565b94505b50505050838110156100ef576040517ff32bec2f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060e08290036106fa576106f3847fd505accf000000000000000000000000000000000000000000000000000000008585610775565b9050610762565b610100829003610730576106f3847f8fcbaf0c000000000000000000000000000000000000000000000000000000008585610775565b6040517f6827585700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061076f5761076f6107c8565b50505050565b6000816004016040518581528385600483013760206000838360008b5af19250505080156107c0573d80156107b657600160005114601f3d111691506107be565b6000863b1191505b505b949350505050565b6040513d6000823e3d81fd5b73ffffffffffffffffffffffffffffffffffffffff811681146107f657600080fd5b50565b60008083601f84011261080b57600080fd5b50813567ffffffffffffffff81111561082357600080fd5b6020830191508360208260051b850101111561083e57600080fd5b9250929050565b60008060008060006080868803121561085d57600080fd5b8535610868816107d4565b94506020860135935060408601359250606086013567ffffffffffffffff81111561089257600080fd5b61089e888289016107f9565b969995985093965092949392505050565b60008060008060008060008060c0898b0312156108cb57600080fd5b88356108d6816107d4565b975060208901356108e6816107d4565b96506040890135955060608901359450608089013567ffffffffffffffff8082111561091157600080fd5b61091d8c838d016107f9565b909650945060a08b013591508082111561093657600080fd5b818b0191508b601f83011261094a57600080fd5b81358181111561095957600080fd5b8c602082850101111561096b57600080fd5b6020830194508093505050509295985092959890939650565b60008060008060008060a0878903121561099d57600080fd5b86356109a8816107d4565b955060208701356109b8816107d4565b94506040870135935060608701359250608087013567ffffffffffffffff8111156109e257600080fd5b6109ee89828a016107f9565b979a969950949750929593949250505056fea2646970667358221220a87f2f10aac328c499aef2f2e2d2725d95dfb2f9303f2aa2769b529d5f96f05c64736f6c63430008160033";

type UnoswapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnoswapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnoswapRouter__factory extends ContractFactory {
  constructor(...args: UnoswapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UnoswapRouter> {
    return super.deploy(overrides || {}) as Promise<UnoswapRouter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UnoswapRouter {
    return super.attach(address) as UnoswapRouter;
  }
  override connect(signer: Signer): UnoswapRouter__factory {
    return super.connect(signer) as UnoswapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnoswapRouterInterface {
    return new utils.Interface(_abi) as UnoswapRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnoswapRouter {
    return new Contract(address, _abi, signerOrProvider) as UnoswapRouter;
  }
}
