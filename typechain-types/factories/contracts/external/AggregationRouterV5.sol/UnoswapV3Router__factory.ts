/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  UnoswapV3Router,
  UnoswapV3RouterInterface,
} from "../../../../contracts/external/AggregationRouterV5.sol/UnoswapV3Router";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BadPool",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyPools",
    type: "error",
  },
  {
    inputs: [],
    name: "EthDepositRejected",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "ReturnAmountIsNotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "SafePermitBadLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "uniswapV3Swap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "uniswapV3SwapTo",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516110d93803806110d983398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516110476100926000396000818161053d01526106ea01526110476000f3fe6080604052600436106100435760003560e01c80632521b93014610057578063bc80f1a814610089578063e449022e1461009c578063fa461e33146100af57600080fd5b36610052576100506100cf565b005b600080fd5b34801561006357600080fd5b50610077610072366004610d0c565b61010a565b60405190815260200160405180910390f35b610077610097366004610db4565b610147565b6100776100aa366004610e1e565b610160565b3480156100bb57600080fd5b506100506100ca366004610e71565b61017a565b323303610108576040517f1b10b0f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600061012d73ffffffffffffffffffffffffffffffffffffffff8916848461039d565b61013a8988888888610456565b9998505050505050505050565b60006101568686868686610456565b9695505050505050565b600061016f3386868686610456565b90505b949350505050565b6101d7565b3d6000803e3d6000fd5b806101965761019661017f565b600160005114601f3d11163d1517806101d3577ff27f64e40000000000000000000000000000000000000000000000000000000060005260046000fd5b5050565b604051601581017f0dfe1681d21220a7ddca3f43a9059cbb23b872dd0000000000000000000000008252602081600484335afa6102165761021661017f565b60208082016004808501335afa61022f5761022f61017f565b602060408201600460088501335afa61024a5761024a61017f565b60008060008813600181146102685760208401519250879150610270565b835192508891505b507fff1f98431c8ad98523631ae4a59f267346ea31f984000000000000000000000084526060832083527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54602084015273ffffffffffffffffffffffffffffffffffffffff605585201692503383181561030e577fb2c027220000000000000000000000000000000000000000000000000000000060005260046000fd5b60843592507f0dfe1681d21220a7ddca3f43a9059cbb23b872dd00000000000000000000000084523083146001811461036f5783601486015233603486015281605486015261036a602060006064601089016000885af1610189565b610392565b336010860152816030860152610392602060006044600c89016000885af1610189565b505050505050505050565b600060e08290036103db576103d4847fd505accf000000000000000000000000000000000000000000000000000000008585610789565b9050610443565b610100829003610411576103d4847f8fcbaf0c000000000000000000000000000000000000000000000000000000008585610789565b6040517f6827585700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80610450576104506107db565b50505050565b600081808203610492576040517f67e7c0f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8591507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81013415156000807f20000000000000000000000000000000000000000000000000000000000000008888868181106104f1576104f1610eb8565b905060200201351611905081156105bd5788341461053b576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db08a6040518263ffffffff1660e01b81526004016000604051808303818588803b1580156105a357600080fd5b505af11580156105b7573d6000803e3d6000fd5b50505050505b600184111561065d576105f730836105d557336105d7565b305b898960008181106105ea576105ea610eb8565b90506020020135886107e7565b945060015b838110156106325761062830308a8a8581811061061b5761061b610eb8565b90506020020135896107e7565b95506001016105fc565b5061065681610641578a610643565b305b308989878181106105ea576105ea610eb8565b945061067b565b6106788161066b578a61066d565b305b836105d557336105d7565b94505b878510156106b5576040517ff32bec2f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801561077c576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018690527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b15801561074357600080fd5b505af1158015610757573d6000803e3d6000fd5b5061077c9250505073ffffffffffffffffffffffffffffffffffffffff8b16866109d3565b5050505095945050505050565b6000816004016040518581528385600483013760206000838360008b5af1925050508015610172573d80156107ca57600160005114601f3d111691506107d2565b6000863b1191505b50949350505050565b6040513d6000823e3d81fd5b60007f800000000000000000000000000000000000000000000000000000000000000083161580156108f35760008473ffffffffffffffffffffffffffffffffffffffff1663128acb08888461083c88610b37565b6040805173ffffffffffffffffffffffffffffffffffffffff8d1660208201526401000276a491016040516020818303038152906040526040518663ffffffff1660e01b8152600401610893959493929190610ee7565b60408051808303816000875af11580156108b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d59190610f8e565b9150506108ea816108e590610fb2565b610bed565b92505050610172565b60008473ffffffffffffffffffffffffffffffffffffffff1663128acb08888461091c88610b37565b6040805173ffffffffffffffffffffffffffffffffffffffff8d16602082015273fffd8963efd1fc6a506488495d951d5263988d2591016040516020818303038152906040526040518663ffffffff1660e01b8152600401610982959493929190610ee7565b60408051808303816000875af11580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c49190610f8e565b5090506108ea6108e582610fb2565b80471015610a42576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610a9c576040519150601f19603f3d011682016040523d82523d6000602084013e610aa1565b606091505b5050905080610b32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610a39565b505050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821115610be9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e206160448201527f6e20696e743235360000000000000000000000000000000000000000000000006064820152608401610a39565b5090565b600080821215610be9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f7369746976656044820152606401610a39565b73ffffffffffffffffffffffffffffffffffffffff81168114610c7b57600080fd5b50565b60008083601f840112610c9057600080fd5b50813567ffffffffffffffff811115610ca857600080fd5b6020830191508360208260051b8501011115610cc357600080fd5b9250929050565b60008083601f840112610cdc57600080fd5b50813567ffffffffffffffff811115610cf457600080fd5b602083019150836020828501011115610cc357600080fd5b60008060008060008060008060c0898b031215610d2857600080fd5b8835610d3381610c59565b97506020890135610d4381610c59565b96506040890135955060608901359450608089013567ffffffffffffffff80821115610d6e57600080fd5b610d7a8c838d01610c7e565b909650945060a08b0135915080821115610d9357600080fd5b50610da08b828c01610cca565b999c989b5096995094979396929594505050565b600080600080600060808688031215610dcc57600080fd5b8535610dd781610c59565b94506020860135935060408601359250606086013567ffffffffffffffff811115610e0157600080fd5b610e0d88828901610c7e565b969995985093965092949392505050565b60008060008060608587031215610e3457600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610e5957600080fd5b610e6587828801610c7e565b95989497509550505050565b60008060008060608587031215610e8757600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610eac57600080fd5b610e6587828801610cca565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff808816835260208715156020850152866040850152818616606085015260a06080850152845191508160a085015260005b82811015610f4b5785810182015185820160c001528101610f2f565b5050600060c0828501015260c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168401019150509695505050505050565b60008060408385031215610fa157600080fd5b505080516020909101519092909150565b60007f8000000000000000000000000000000000000000000000000000000000000000820361100a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506000039056fea2646970667358221220c97be3697e7ba470c77bf2e6a86b068eecc6fe12d4e1b83aab609408b158d31964736f6c63430008160033";

type UnoswapV3RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnoswapV3RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnoswapV3Router__factory extends ContractFactory {
  constructor(...args: UnoswapV3RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UnoswapV3Router> {
    return super.deploy(weth, overrides || {}) as Promise<UnoswapV3Router>;
  }
  override getDeployTransaction(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth, overrides || {});
  }
  override attach(address: string): UnoswapV3Router {
    return super.attach(address) as UnoswapV3Router;
  }
  override connect(signer: Signer): UnoswapV3Router__factory {
    return super.connect(signer) as UnoswapV3Router__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnoswapV3RouterInterface {
    return new utils.Interface(_abi) as UnoswapV3RouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnoswapV3Router {
    return new Contract(address, _abi, signerOrProvider) as UnoswapV3Router;
  }
}
