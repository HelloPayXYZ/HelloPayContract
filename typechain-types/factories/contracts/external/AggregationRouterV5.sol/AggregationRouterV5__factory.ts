/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AggregationRouterV5,
  AggregationRouterV5Interface,
} from "../../../../contracts/external/AggregationRouterV5.sol/AggregationRouterV5";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AdvanceNonceFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyFilled",
    type: "error",
  },
  {
    inputs: [],
    name: "ArbitraryStaticCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "BadPool",
    type: "error",
  },
  {
    inputs: [],
    name: "BadSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "ETHTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ETHTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyPools",
    type: "error",
  },
  {
    inputs: [],
    name: "EthDepositRejected",
    type: "error",
  },
  {
    inputs: [],
    name: "GetAmountCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectDataLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidatedOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "MakingAmountExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MakingAmountTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOneAmountShouldBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "PermitLengthTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "PredicateIsNotTrue",
    type: "error",
  },
  {
    inputs: [],
    name: "PrivateOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "RFQBadSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "RFQPrivateOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "RFQSwapWithZeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "RFQZeroTargetIsForbidden",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyDetected",
    type: "error",
  },
  {
    inputs: [],
    name: "RemainingAmountIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ReservesCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ReturnAmountIsNotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "SafePermitBadLength",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFromFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "res",
        type: "bytes",
      },
    ],
    name: "SimulationResults",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAmountTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapWithZeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "TakingAmountExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TakingAmountIncreased",
    type: "error",
  },
  {
    inputs: [],
    name: "TakingAmountTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromMakerToTakerFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromTakerToMakerFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongGetter",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroMinReturn",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroReturnAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroTargetIsForbidden",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newNonce",
        type: "uint256",
      },
    ],
    name: "NonceIncreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingRaw",
        type: "uint256",
      },
    ],
    name: "OrderCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
    ],
    name: "OrderFilledRFQ",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "advanceNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offsets",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "and",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "arbitraryStaticCall",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offsets",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "interactions",
            type: "bytes",
          },
        ],
        internalType: "struct OrderLib.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancelOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "orderRemaining",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderInfo",
        type: "uint256",
      },
    ],
    name: "cancelOrderRFQ",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderInfo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "additionalMask",
        type: "uint256",
      },
    ],
    name: "cancelOrderRFQ",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offsets",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "interactions",
            type: "bytes",
          },
        ],
        internalType: "struct OrderLib.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "checkPredicate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IClipperExchangeInterface",
        name: "clipperExchange",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "dstToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "goodUntil",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
    ],
    name: "clipperSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IClipperExchangeInterface",
        name: "clipperExchange",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "dstToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "goodUntil",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
    ],
    name: "clipperSwapTo",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IClipperExchangeInterface",
        name: "clipperExchange",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "dstToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "goodUntil",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "clipperSwapToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "eq",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offsets",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "interactions",
            type: "bytes",
          },
        ],
        internalType: "struct OrderLib.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "interaction",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skipPermitAndThresholdAmount",
        type: "uint256",
      },
    ],
    name: "fillOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "info",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OrderRFQLib.OrderRFQ",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "flagsAndAmount",
        type: "uint256",
      },
    ],
    name: "fillOrderRFQ",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "info",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OrderRFQLib.OrderRFQ",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "flagsAndAmount",
        type: "uint256",
      },
    ],
    name: "fillOrderRFQCompact",
    outputs: [
      {
        internalType: "uint256",
        name: "filledMakingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "filledTakingAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "info",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OrderRFQLib.OrderRFQ",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "flagsAndAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "fillOrderRFQTo",
    outputs: [
      {
        internalType: "uint256",
        name: "filledMakingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "filledTakingAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "info",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OrderRFQLib.OrderRFQ",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "flagsAndAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "fillOrderRFQToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offsets",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "interactions",
            type: "bytes",
          },
        ],
        internalType: "struct OrderLib.Order",
        name: "order_",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "interaction",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skipPermitAndThresholdAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "fillOrderTo",
    outputs: [
      {
        internalType: "uint256",
        name: "actualMakingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualTakingAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offsets",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "interactions",
            type: "bytes",
          },
        ],
        internalType: "struct OrderLib.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "interaction",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skipPermitAndThresholdAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "fillOrderToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "gt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offsets",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "interactions",
            type: "bytes",
          },
        ],
        internalType: "struct OrderLib.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "hashOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increaseNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    name: "invalidatorForOrderRFQ",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "lt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "makerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "makerNonce",
        type: "uint256",
      },
    ],
    name: "nonceEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offsets",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "or",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "remaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "remainingRaw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "orderHashes",
        type: "bytes32[]",
      },
    ],
    name: "remainingsRaw",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "simulate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAggregationExecutor",
        name: "executor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "srcToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "dstToken",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "srcReceiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "dstReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
        ],
        internalType: "struct GenericRouter.SwapDescription",
        name: "desc",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spentAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "timestampBelow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeNonceAccount",
        type: "uint256",
      },
    ],
    name: "timestampBelowAndNonceEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "uniswapV3Swap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "uniswapV3SwapTo",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "unoswap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "unoswapTo",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "unoswapToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101e06040523480156200001257600080fd5b5060405162006a8238038062006a828339810160408190526200003591620001d3565b604080518082018252601881527f31696e6368204167677265676174696f6e20526f75746572000000000000000060208083019182528351808501855260018152603560f81b908201529151902060e08190527fceebf77a833b30520287ddd9478ff51abbdffa30aa90a8d655dba0e8a79ce0c16101008190524660a081815285517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818701819052818801959095526060810193909352608080840192909252308382018190528651808503909201825260c09384019096528051940193909320909252919052610120528080808080620001313362000183565b6001600160a01b039081166101405290811661016052908116610180529081166101a0529081166101c05281166200017c5760405163d92e233d60e01b815260040160405180910390fd5b5062000205565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620001e657600080fd5b81516001600160a01b0381168114620001fe57600080fd5b9392505050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516167a5620002dd6000396000818161424e01528181614323015281816143c0015281816144ff0152818161459c0152614664015260005050600081816126db015281816127fe015261289101526000818161385001526139fd01526000818161095701528181610a1f01528181610be101528181610d1c0152610d9601526000613b3301526000613b8201526000613b5d01526000613ab601526000613ae001526000613b0a01526167a56000f3fe6080604052600436106102f65760003560e01c80637e54f0921161018f578063bf15fcd8116100e1578063d365c6951161008a578063f2fde38b11610064578063f2fde38b14610880578063f78dc253146108a0578063fa461e33146108b357600080fd5b8063d365c6951461083a578063e449022e1461085a578063e5d7bde61461086d57600080fd5b8063c805a666116100bb578063c805a666146107b3578063ca4ece22146107d3578063cf6fc6e3146107f357600080fd5b8063bf15fcd81461075e578063bfa751431461077e578063c53a02921461079e57600080fd5b8063942461bb11610143578063bc80f1a81161011d578063bc80f1a81461070b578063bd61951d1461071e578063bddccd351461073e57600080fd5b8063942461bb146106ab5780639570eeee146106d8578063bc1ed74c146106eb57600080fd5b806383197ef01161017457806383197ef01461064e57806384bd6d29146106635780638da5cb5b1461067657600080fd5b80637e54f09214610601578063825caba11461062e57600080fd5b80635a0998431161024857806370ae92d2116101fc57806372c244a8116101d657806372c244a8146105a157806374261145146105c157806378e3214f146105e157600080fd5b806370ae92d21461053f57806370ccbd311461056c578063715018a61461058c57600080fd5b806363592c2b1161022d57806363592c2b146104df5780636c838250146104ff5780636fe7b0ba1461051f57600080fd5b80635a099843146104b957806362e238bb146104cc57600080fd5b80632d9a56f6116102aa5780633eca9c0a116102845780633eca9c0a1461041b5780634f38e2b81461044957806356f161241461046957600080fd5b80632d9a56f6146103bb57806337e7316f146103db5780633c15fd91146103fb57600080fd5b806312aa3caf116102db57806312aa3caf146103435780632521b9301461036b5780632cc2878d1461038b57600080fd5b80630502b1c51461030a578063093d4fa51461033057600080fd5b36610305576103036108d3565b005b600080fd5b61031d6103183660046156d1565b6108dd565b6040519081526020015b60405180910390f35b61031d61033e36600461573b565b6108f7565b610356610351366004615807565b610ef4565b60408051928352602083019190915201610327565b34801561037757600080fd5b5061031d6103863660046158c7565b6112b7565b34801561039757600080fd5b506103ab6103a636600461596f565b6112f4565b6040519015158152602001610327565b3480156103c757600080fd5b506103566103d63660046159a1565b61134b565b3480156103e757600080fd5b5061031d6103f63660046159a1565b611475565b34801561040757600080fd5b5061031d6104163660046158c7565b61148f565b61042e610429366004615afc565b6114c0565b60408051938452602084019290925290820152606001610327565b34801561045557600080fd5b506103ab610464366004615b59565b6114e2565b34801561047557600080fd5b5061031d610484366004615ba5565b73ffffffffffffffffffffffffffffffffffffffff919091166000908152600360209081526040808320938352929052205490565b61042e6104c7366004615bd1565b61150d565b61042e6104da366004615c47565b61171f565b3480156104eb57600080fd5b506103ab6104fa36600461596f565b421090565b34801561050b57600080fd5b506103ab61051a3660046159a1565b611749565b34801561052b57600080fd5b506103ab61053a366004615b59565b611778565b34801561054b57600080fd5b5061031d61055a366004615cf3565b60016020526000908152604090205481565b34801561057857600080fd5b5061042e610587366004615d10565b61179e565b34801561059857600080fd5b506103036117f2565b3480156105ad57600080fd5b506103036105bc366004615db4565b611804565b3480156105cd57600080fd5b506103ab6105dc366004615b59565b6118b3565b3480156105ed57600080fd5b506103036105fc366004615ba5565b611925565b34801561060d57600080fd5b5061031d61061c36600461596f565b60009081526002602052604090205490565b34801561063a57600080fd5b5061030361064936600461596f565b611952565b34801561065a57600080fd5b50610303611961565b61031d610671366004615dd7565b61196c565b34801561068257600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610327565b3480156106b757600080fd5b506106cb6106c6366004615e4e565b61197f565b6040516103279190615ee8565b61042e6106e6366004615f2c565b611a2e565b3480156106f757600080fd5b5061031d61070636600461596f565b611c0e565b61031d6107193660046156d1565b611c7c565b34801561072a57600080fd5b50610303610739366004615f69565b611c8b565b34801561074a57600080fd5b50610303610759366004615fa5565b611d39565b34801561076a57600080fd5b5061031d610779366004615f69565b611d44565b34801561078a57600080fd5b506103ab610799366004615b59565b611d8f565b3480156107aa57600080fd5b50610303611e02565b3480156107bf57600080fd5b5061031d6107ce366004615fc7565b611e0c565b3480156107df57600080fd5b506103ab6107ee366004615b59565b611e50565b3480156107ff57600080fd5b506103ab61080e366004615ba5565b73ffffffffffffffffffffffffffffffffffffffff919091166000908152600160205260409020541490565b34801561084657600080fd5b5061042e61085536600461608b565b611e77565b61031d61086836600461617c565b611f18565b61042e61087b3660046161cf565b611f27565b34801561088c57600080fd5b5061030361089b366004615cf3565b612b4f565b61031d6108ae366004616293565b612c03565b3480156108bf57600080fd5b506103036108ce3660046162fd565b612c1e565b6108db612e3d565b565b60006108ed338787878787612e76565b9695505050505050565b600073ffffffffffffffffffffffffffffffffffffffff881615801561095557863414610950576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610afc565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1603610aa25750600134156109e3576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f23b872dd00000000000000000000000000000000000000000000000000000000808252336004830152306024830152604482018990527f0000000000000000000000000000000000000000000000000000000000000000917f2e1a7d4d000000000000000000000000000000000000000000000000000000009060008060648382885af1610a78573d6000823e3d81fd5b8181528a60048201526000806024836000885af1610a99573d6000823e3d81fd5b50505050610afc565b3415610ada576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610afc73ffffffffffffffffffffffffffffffffffffffff8a16338d8a613388565b8015610bc15760008b905060006327a9b42460e01b90506040518181528a60048201528960248201528860448201528760648201528c60848201528560ff1c601b0160a48201528660c48201527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff861660e48201526101206101048201527f0531494e43480000000000000000000000000000000000000000000000000000610143820152600080610149838d875af1610bb9573d6000823e3d81fd5b505050610ee5565b73ffffffffffffffffffffffffffffffffffffffff88161580610c2f57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16145b15610e22576040517f4cb6864c00000000000000000000000000000000000000000000000000000000808252600482018b90526024820189905260448201889052606482018790528c918a1560018114610c8e57306084830152610c95565b8d60848301525b508560ff1c601b0160a48201528660c48201527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff861660e48201526101206101048201527f0531494e43480000000000000000000000000000000000000000000000000000610143820152600080610149836000875af1610d19573d6000823e3d81fd5b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1603610e1b576040517fd0e30db0000000000000000000000000000000000000000000000000000000008082527f0000000000000000000000000000000000000000000000000000000000000000917fa9059cbb00000000000000000000000000000000000000000000000000000000906000806004838f885af1610def573d6000823e3d81fd5b8181528f60048201528b60248201526000806044836000885af1610e16573d6000823e3d81fd5b505050505b5050610ee5565b60008b90506000632b651a6c60e01b90506040518181528b60048201528a60248201528960448201528860648201528760848201528c60a48201528560ff1c601b0160c48201528660e48201527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff86166101048201526101406101248201527f0531494e43480000000000000000000000000000000000000000000000000000610163820152600080610169836000875af1610ee1573d6000823e3d81fd5b5050505b50939998505050505050505050565b6000808660a00135600003610f35576040517f0262dde400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f446020890189615cf3565b90506000610f5860408a0160208b01615cf3565b90506000610f7b8373ffffffffffffffffffffffffffffffffffffffff16613425565b905060c08a013560021615610fd95780610f96576000610f9c565b89608001355b3411610fd4576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611023565b80610fe5576000610feb565b89608001355b3414611023576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061108657871561104f5761104f73ffffffffffffffffffffffffffffffffffffffff84168a8a613478565b6110863361106360608d0160408e01615cf3565b73ffffffffffffffffffffffffffffffffffffffff8616919060808e0135613388565b6110978b338c608001358a8a613531565b60808a013593506110be73ffffffffffffffffffffffffffffffffffffffff831630613591565b9450846000036110fa576040517f28ebf24700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9094019360c08a01356001161561120257600061114e73ffffffffffffffffffffffffffffffffffffffff851630613591565b905060018111156111a8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016111858186616373565b94506111a873ffffffffffffffffffffffffffffffffffffffff85163383613656565b6111b68560a08d0135616386565b6111c460808d013588616386565b10156111fc576040517ff32bec2f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50611240565b8960a00135851015611240576040517ff32bec2f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061125360808d0160608e01615cf3565b73ffffffffffffffffffffffffffffffffffffffff16146112835761127e60808c0160608d01615cf3565b611285565b335b90506112a873ffffffffffffffffffffffffffffffffffffffff84168288613656565b50505050965096945050505050565b60006112da73ffffffffffffffffffffffffffffffffffffffff89168484613478565b6112e78988888888613769565b9998505050505050505050565b600060d082901c60a083901c65ffffffffffff168361131283421090565b8015611342575073ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090205482145b95945050505050565b6000803361135f6080850160608601615cf3565b73ffffffffffffffffffffffffffffffffffffffff16146113ac576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113b583611475565b600081815260026020526040902054925090507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201611421576040517f41a26a6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080518281526020810184905233917fcbfa7d191838ece7ba4783ca3a30afd316619b7f368094b57ee7ffde9a923db1910160405180910390a26000818152600260205260409020600190559092909150565b6000611489611482613a9c565b8390613bd0565b92915050565b60006114b273ffffffffffffffffffffffffffffffffffffffff89168484613478565b6112e7898989898989612e76565b60008060006114d2878787873361150d565b9250925092509450945094915050565b60008060006114f18585613c6a565b9150915081801561150157508581115b925050505b9392505050565b60008060006115a661151d613a9c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08a0180517f74ab4f0cde46aaf927859983f7d04002116dd057d4c4941f6dbfb775c3e31f458252610100822091526040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b90507f4000000000000000000000000000000000000000000000000000000000000000851615611684577f2000000000000000000000000000000000000000000000000000000000000000851615801590611602575060418614155b15611639576040517f17c2b1f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116498860600151828989613eec565b61167f576040517f17c2b1f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116ca565b6116948860600151828989613f41565b6116ca576040517f17c2b1f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116d5888686613fcf565b60408051848152602081018490529295509093507fc3b639f02b125bfa160e50739b8c44eb2d1b6908e2b6d5925c6d770f2ca78127910160405180910390a1955095509592505050565b60008060006117358b8b8b8b8b8b8b8b33611f27565b925092509250985098509895505050505050565b600080600061175f61175a85614743565b613c6a565b915091508180156117705750806001145b949350505050565b60008060006117878585613c6a565b915091508180156115015750909414949350505050565b60008060006117d285858c6040015173ffffffffffffffffffffffffffffffffffffffff166134789092919063ffffffff16565b6117df8a8a8a8a8a61150d565b9250925092509750975097945050505050565b6117fa61475a565b6108db60006147db565b8060ff16600003611841576040517fbd71636d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526001602052604081205461185f9060ff84169061639d565b336000818152600160205260409081902083905551919250907ffc69110dd11eb791755e4abd6b7d281bae236de95736d38a23782814be5e10db906118a79084815260200190565b60405180910390a25050565b60008080805b63ffffffff87821c1692508215611918576000806118dc61175a86868a8c6163b0565b915091508180156118ed5750806001145b1561190057600195505050505050611506565b50839250611911905060208261639d565b90506118b9565b5060009695505050505050565b61192d61475a565b61194e73ffffffffffffffffffffffffffffffffffffffff83163383613656565b5050565b61195e33826000614850565b50565b61196961475a565b33ff5b60006112e789338a8a8a8a8a8a8a6108f7565b60606000825167ffffffffffffffff81111561199d5761199d6159d6565b6040519080825280602002602001820160405280156119c6578160200160208202803683370190505b50905060005b8351811015611a2757600260008583815181106119eb576119eb6163da565b6020026020010151815260200190815260200160002054828281518110611a1457611a146163da565b60209081029190910101526001016119cc565b5092915050565b6000806000611ac7611a3e613a9c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0890180517f74ab4f0cde46aaf927859983f7d04002116dd057d4c4941f6dbfb775c3e31f458252610100822091526040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b90507f4000000000000000000000000000000000000000000000000000000000000000841615611b74577f2000000000000000000000000000000000000000000000000000000000000000841615611b6457611b2987606001518288886148f1565b611b5f576040517f17c2b1f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611bba565b611b298760600151828888614974565b611b8487606001518288886149c9565b611bba576040517f17c2b1f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611bc5878533613fcf565b60408051848152602081018490529295509093507fc3b639f02b125bfa160e50739b8c44eb2d1b6908e2b6d5925c6d770f2ca78127910160405180910390a19450945094915050565b60008181526002602052604081205480611c54576040517fb838de9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0192915050565b60006108ed8686868686613769565b6000808473ffffffffffffffffffffffffffffffffffffffff168484604051611cb5929190616409565b600060405180830381855af49150503d8060008114611cf0576040519150601f19603f3d011682016040523d82523d6000602084013e611cf5565b606091505b509150915081816040517f1934afc8000000000000000000000000000000000000000000000000000000008152600401611d30929190616487565b60405180910390fd5b61194e338383614850565b6000806000611d54868686614a3f565b9150915081611342576040517f1f1b8f6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080805b63ffffffff87821c1692508215611df557600080611db861175a86868a8c6163b0565b91509150811580611dca575080600114155b15611ddd57600095505050505050611506565b50839250611dee905060208261639d565b9050611d95565b5060019695505050505050565b6108db6001611804565b6000611e2f73ffffffffffffffffffffffffffffffffffffffff8b168484613478565b611e408c8c8c8c8c8c8c8c8c6108f7565b9c9b505050505050505050505050565b6000806000611e5f8585613c6a565b91509150818015611501575094909410949350505050565b600080806014841015611eb6576040517fd9e1c6dc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000366000611ec58888614a6d565b91945092509050611eed73ffffffffffffffffffffffffffffffffffffffff84168383613478565b505050611f018e8e8e8e8e8e8e8e8e611f27565b9250925092509b509b509b98505050505050505050565b60006113423386868686613769565b6000808073ffffffffffffffffffffffffffffffffffffffff8416611f78576040517fb0c4d05f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f818c611475565b6000818152600260205260409020548894508793509091508c907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101611ff4576040517fecef366400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061200660c0840160a08501615cf3565b73ffffffffffffffffffffffffffffffffffffffff161415801561204f57503361203660c0840160a08501615cf3565b73ffffffffffffffffffffffffffffffffffffffff1614155b15612086576040517fd4dfdafe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806121b2576120a661209e6080840160608501615cf3565b848f8f613f41565b6120dc576040517f5cd5d23300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060c08101353660006120ee84614ae2565b915091507f800000000000000000000000000000000000000000000000000000000000000089166000148015612125575060148110155b156121ab5760003660006121398585614a6d565b9194509250905061216173ffffffffffffffffffffffffffffffffffffffff84168383613478565b600088815260026020526040902054156121a7576040517fc5f2be5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b50506121d5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff015b60006121e083614743565b90501115612227576121f182611749565b612227576040517fb6629c0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8415841503612261576040517ee2a52200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8360000361230a5780851115612275578094505b61229361228183614af0565b8460c00135888660e001358689614afe565b93507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff87166122c28682616386565b6122cc8b87616386565b1115612304576040517ffb8ae12900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506123ee565b61232861231683614b34565b8460e00135878660c001358689614b42565b94508085111561237d5780945061234161228183614af0565b93508784111561237d576040517f939c420400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff87166123aa8582616386565b6123b48a88616386565b10156123ec576040517f481ea39200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b8415806123f9575083155b15612430576040517ffba5a27600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84810390508060010160026000858152602001908152602001600020819055508d60600160208101906124639190615cf3565b73ffffffffffffffffffffffffffffffffffffffff167fb9ed0243fdf00f0545c63a0af8850c090d86bb46682baec4bf3c496814fe4f0284836040516124b3929190918252602082015260400190565b60405180910390a260146124c683614b56565b9050106125765760003660006124e36124de86614b56565b614a6d565b9194509250905073ffffffffffffffffffffffffffffffffffffffff83166396a10e33876125176080890160608a01615cf3565b338c8c8a89896040518963ffffffff1660e01b81526004016125409897969594939291906164eb565b600060405180830381600087803b15801561255a57600080fd5b505af115801561256e573d6000803e3d6000fd5b505050505050505b6125a96125896040840160208501615cf3565b6125996080850160608601615cf3565b88886125a487614b64565b614b72565b6125df576040517f70a03f4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60148a106126c45760003660006125f68e8e614a6d565b92509250925060008373ffffffffffffffffffffffffffffffffffffffff1663ccee33d7338b8b87876040518663ffffffff1660e01b815260040161263f95949392919061654b565b6020604051808303816000875af115801561265e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126829190616587565b905087811180156126a1575061269f61269a87614b34565b614be6565b155b80156126b657506126b461269a87614af0565b155b156126bf578097505b505050505b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001661270b6060840160408501615cf3565b73ffffffffffffffffffffffffffffffffffffffff1614801561272e5750600034115b156129aa578334101561276d576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b833411156127fc57604051600090339034879003908381818185875af1925050503d80600081146127ba576040519150601f19603f3d011682016040523d82523d6000602084013e6127bf565b606091505b50509050806127fa576040517fb12d13eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b15801561286457600080fd5b505af1158015612878573d6000803e3d6000fd5b505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016925063a9059cbb9150600090506128ce60a0860160808701615cf3565b73ffffffffffffffffffffffffffffffffffffffff16146128fe576128f960a0850160808601615cf3565b61290e565b61290e6080850160608601615cf3565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018790526044016020604051808303816000875af1158015612980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129a491906165a0565b50612a88565b34156129e2576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612a526129f56060840160408501615cf3565b336000612a0860a0870160808801615cf3565b73ffffffffffffffffffffffffffffffffffffffff1614612a3857612a3360a0860160808701615cf3565b612a48565b612a486080860160608701615cf3565b876125a487614c5b565b612a88576040517f478a520500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6014612a9383614c69565b905010612b3e576000366000612aab6124de86614c69565b9194509250905073ffffffffffffffffffffffffffffffffffffffff8316633504ed6287612adf6080890160608a01615cf3565b338c8c8a89896040518963ffffffff1660e01b8152600401612b089897969594939291906164eb565b600060405180830381600087803b158015612b2257600080fd5b505af1158015612b36573d6000803e3d6000fd5b505050505050505b505099509950999650505050505050565b612b5761475a565b73ffffffffffffffffffffffffffffffffffffffff8116612bfa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401611d30565b61195e816147db565b6000612c13878787878787612e76565b979650505050505050565b612c77565b3d6000803e3d6000fd5b80612c3a57612c3a612c23565b600160005114601f3d11163d15178061194e577ff27f64e40000000000000000000000000000000000000000000000000000000060005260046000fd5b604051601581017f0dfe1681d21220a7ddca3f43a9059cbb23b872dd0000000000000000000000008252602081600484335afa612cb657612cb6612c23565b60208082016004808501335afa612ccf57612ccf612c23565b602060408201600460088501335afa612cea57612cea612c23565b6000806000881360018114612d085760208401519250879150612d10565b835192508891505b507fff1f98431c8ad98523631ae4a59f267346ea31f984000000000000000000000084526060832083527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54602084015273ffffffffffffffffffffffffffffffffffffffff6055852016925033831815612dae577fb2c027220000000000000000000000000000000000000000000000000000000060005260046000fd5b60843592507f0dfe1681d21220a7ddca3f43a9059cbb23b872dd000000000000000000000000845230831460018114612e0f57836014860152336034860152816054860152612e0a602060006064601089016000885af1612c2d565b612e32565b336010860152816030860152612e32602060006044600c89016000885af1612c2d565b505050505050505050565b3233036108db576040517f1b10b0f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000612f71565b7f0902f1ac0000000000000000000000000000000000000000000000000000000081526000604082600484875afa612eb757612eb7612c23565b60603d14612ee9577f85cd58dc0000000000000000000000000000000000000000000000000000000060005260046000fd5b815160208301518615612ef857905b8785029250633b9aca008202830181840204925050507f022c0d9f000000000000000000000000000000000000000000000000000000008252841594508415810260048301528481026024830152866044830152608060648301526000608483015260008060a4846000885af16108ed576108ed612c23565b6dffffffffffffffffffffffffffff851115612fb1577fcf0b4d3a0000000000000000000000000000000000000000000000000000000060005260046000fd5b60405160c081016040528260051b840184358860008114613060573415612ffc577f1841b4e10000000000000000000000000000000000000000000000000000000060005260046000fd5b7f23b872dd00000000000000000000000000000000000000000000000000000000845233600485015273ffffffffffffffffffffffffffffffffffffffff8216602485015288604485015261305b6020600060648760008f5af1612c2d565b61314e565b348914613091577f1841b4e10000000000000000000000000000000000000000000000000000000060005260046000fd5b7fd0e30db00000000000000000000000000000000000000000000000000000000084526000806004868c73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af16130de576130de612c23565b7fa9059cbb00000000000000000000000000000000000000000000000000000000845273ffffffffffffffffffffffffffffffffffffffff82166004850152886024850152600080604486600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af161314e5761314e612c23565b50879350602086015b828110156131e65780356131da73ffffffffffffffffffffffffffffffffffffffff821677ffffffff0000000000000000000000000000000000000000851660a01c7f8000000000000000000000000000000000000000000000000000000000000000861673ffffffffffffffffffffffffffffffffffffffff87168a8a612e7d565b95509150602001613157565b507f4000000000000000000000000000000000000000000000000000000000000000811680156132e4576132733077ffffffff0000000000000000000000000000000000000000841660a01c7f8000000000000000000000000000000000000000000000000000000000000000851673ffffffffffffffffffffffffffffffffffffffff86168989612e7d565b94507f2e1a7d4d000000000000000000000000000000000000000000000000000000008452846004850152600080602486600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af16132c9576132c9612c23565b600080600080888f5af16132df576132df612c23565b61334a565b6133478b77ffffffff0000000000000000000000000000000000000000841660a01c7f8000000000000000000000000000000000000000000000000000000000000000851673ffffffffffffffffffffffffffffffffffffffff86168989612e7d565b94505b50505050838110156108ed576040517ff32bec2f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006323b872dd60e01b905060006040518281528560048201528460248201528360448201526020600060648360008b5af191505080156133e6573d80156133dc57600160005114601f3d111691506133e4565b6000873b1191505b505b8061341d576040517ff405907100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82161580611489575073ffffffffffffffffffffffffffffffffffffffff821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1492915050565b600060e08290036134b6576134af847fd505accf000000000000000000000000000000000000000000000000000000008585614c77565b905061351e565b6101008290036134ec576134af847f8fcbaf0c000000000000000000000000000000000000000000000000000000008585614c77565b6040517f6827585700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061352b5761352b614cc9565b50505050565b6040517f4b64e4920000000000000000000000000000000000000000000000000000000080825260048201869052908284602483013784836024830101526000808460440183348b5af1613588573d6000823e3d81fd5b50505050505050565b600061359c83613425565b156135bf575073ffffffffffffffffffffffffffffffffffffffff811631611489565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301528416906370a0823190602401602060405180830381865afa15801561362b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061364f9190616587565b9050611489565b80156137645761366583613425565b1561374357804710156136a4576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168261138890604051600060405180830381858888f193505050503d8060008114613703576040519150601f19603f3d011682016040523d82523d6000602084013e613708565b606091505b505090508061352b576040517fb12d13eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61376473ffffffffffffffffffffffffffffffffffffffff84168383614cd5565b505050565b6000818082036137a5576040517f67e7c0f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8591507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81013415156000807f2000000000000000000000000000000000000000000000000000000000000000888886818110613804576138046163da565b905060200201351611905081156138d05788341461384e576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db08a6040518263ffffffff1660e01b81526004016000604051808303818588803b1580156138b657600080fd5b505af11580156138ca573d6000803e3d6000fd5b50505050505b60018411156139705761390a30836138e857336138ea565b305b898960008181106138fd576138fd6163da565b9050602002013588614d37565b945060015b838110156139455761393b30308a8a8581811061392e5761392e6163da565b9050602002013589614d37565b955060010161390f565b5061396981613954578a613956565b305b308989878181106138fd576138fd6163da565b945061398e565b61398b8161397e578a613980565b305b836138e857336138ea565b94505b878510156139c8576040517ff32bec2f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015613a8f576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018690527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b158015613a5657600080fd5b505af1158015613a6a573d6000803e3d6000fd5b50613a8f9250505073ffffffffffffffffffffffffffffffffffffffff8b1686614f23565b5050505095945050505050565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148015613b0257507f000000000000000000000000000000000000000000000000000000000000000046145b15613b2c57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60003681613be26101208601866165c2565b60405191935091507f0a244ca8a150ac294c14fcff9277051ced9a5b23e966a0ff0522e989da23116c908284823782812061014082015261012087602083013781815261016090206040517f190100000000000000000000000000000000000000000000000000000000000081526002810187905260228101829052604290209094506108ed565b6000806000613c79858561507d565b60e01c90506000613c8c868660046150c0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffd33d78738201613cde576001613cc0826112f4565b613ccb576000613cce565b60015b90945060ff169250613ee5915050565b63bf15fcd8821015613dd857636fe7b0ba821015613d66577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffb0c71d488201613d2f576001613cc0826104648989606461510a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff9ca6d3d58201613d61576001613cc082421090565b613ed3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff90184f468201613d9f576001613cc08261053a8989606461510a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff8bd9eebb8201613d61576001613cc0826105dc8989606461510a565b63ca4ece22821015613e61577fffffffffffffffffffffffffffffffffffffffffffffffffffffffff40ea03288201613e28576001613e1d826107798989606461510a565b935093505050613ee5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff4058aebd8201613d61576001613cc0826107998989606461510a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff35b131de8201613e9a576001613cc0826107ee8989606461510a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff3090391d8201613ed3576001613cc08261080e898960246150c0565b613ede308787614a3f565b9350935050505b9250929050565b600080631626ba7e60e01b905060405181815285600482015260406024820152836044820152838560648301376020600085606401838a5afa15613f375760203d1460005183141692505b5050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8516613f6657506000611770565b6040821480613f755750604182145b8015613fb657508473ffffffffffffffffffffffffffffffffffffffff16613f9e858585615153565b73ffffffffffffffffffffffffffffffffffffffff16145b15613fc357506001611770565b61134285858585613eec565b60008073ffffffffffffffffffffffffffffffffffffffff831661401f576040517f692e45e000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060850151608086015173ffffffffffffffffffffffffffffffffffffffff16158015906140675750608086015173ffffffffffffffffffffffffffffffffffffffff163314155b1561409e576040517fe8c6632100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b855167ffffffffffffffff604082901c1680158015906140bd57508042115b156140f4576040517fc56873ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61410083836000614850565b505060a086015160c08701517f0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8716600081900361414357829550819450614205565b7f80000000000000000000000000000000000000000000000000000000000000008816156141ba57828111156141a5576040517faa34b69600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8095506141b3838388615221565b9450614205565b818111156141f4576040517f7f902a9300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80945061420283838761524f565b95505b5050508260001480614215575081155b1561424c576040517f07b6e79f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff161480156142cc57507f1000000000000000000000000000000000000000000000000000000000000000851615155b156144d6576040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152306024830152604482018590527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af115801561436c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061439091906165a0565b506040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018490527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b15801561441957600080fd5b505af115801561442d573d6000803e3d6000fd5b5050505060008473ffffffffffffffffffffffffffffffffffffffff168461138890604051600060405180830381858888f193505050503d8060008114614490576040519150601f19603f3d011682016040523d82523d6000602084013e614495565b606091505b50509050806144d0576040517fb12d13eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506144fd565b60208601516144fd9073ffffffffffffffffffffffffffffffffffffffff16828686613388565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16866040015173ffffffffffffffffffffffffffffffffffffffff1614801561455c5750600034115b156146db5781341461459a576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561460257600080fd5b505af1158015614616573d6000803e3d6000fd5b50506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018790527f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb925060440190506020604051808303816000875af11580156146b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146d591906165a0565b5061473a565b3415614713576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604086015161473a9073ffffffffffffffffffffffffffffffffffffffff16338385613388565b50935093915050565b36600061475183600461525c565b91509150915091565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611d30565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260036020908152604080832066ffffffffffffff600887901c16808552928190529220549091600160ff86161b8417918083168390036148d8576040517ff71fbda200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000938452602091909152604090922091179055505050565b600080631626ba7e60e01b905060405181815285600482015260406024820152604160448201528460648201527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841660848201528360ff1c601b0160a48201536020600060a5838a5afa15613f375750600051143d6020141695945050505050565b600080631626ba7e60e01b905060405181815285600482015260406024820152604060448201528460648201528360848201526020600060a4838a5afa15613f375750600051143d6020141695945050505050565b600073ffffffffffffffffffffffffffffffffffffffff85166149ee57506000611770565b8473ffffffffffffffffffffffffffffffffffffffff16614a108585856152b7565b73ffffffffffffffffffffffffffffffffffffffff1603614a3357506001611770565b61134285858585614974565b60008060405183858237602060008583895afa3d602014169250508115614a6557506000515b935093915050565b600036816014841015614aac576040517fef356d7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050813560601c926014909201917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec90910190565b36600061475183600561525c565b36600061475183600361525c565b6000868103614b1957614b12868587615221565b9050612c13565b614b288888888888888861533f565b98975050505050505050565b36600061475183600261525c565b6000868103614b1957614b1284878761524f565b36600061475183600661525c565b36600061475183600061525c565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008082526004820187905260248201869052604482018590526000918385606483013760206000856064018360008d5af19050600160005114601f3d11163d15178116925050509695505050505050565b6000600182148015611506575082826000818110614c0657614c066163da565b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f7800000000000000000000000000000000000000000000000000000000000000149392505050565b36600061475183600161525c565b36600061475183600761525c565b6000816004016040518581528385600483013760206000838360008b5af1925050508015611770573d8015614cb857600160005114601f3d11169150614cc0565b6000863b1191505b50949350505050565b6040513d6000823e3d81fd5b614d01837fa9059cbb0000000000000000000000000000000000000000000000000000000084846154f6565b613764576040517ffb7f507900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f80000000000000000000000000000000000000000000000000000000000000008316158015614e435760008473ffffffffffffffffffffffffffffffffffffffff1663128acb088884614d8c88615538565b6040805173ffffffffffffffffffffffffffffffffffffffff8d1660208201526401000276a491016040516020818303038152906040526040518663ffffffff1660e01b8152600401614de3959493929190616627565b60408051808303816000875af1158015614e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614e25919061666e565b915050614e3a81614e3590616692565b6155ee565b92505050611770565b60008473ffffffffffffffffffffffffffffffffffffffff1663128acb088884614e6c88615538565b6040805173ffffffffffffffffffffffffffffffffffffffff8d16602082015273fffd8963efd1fc6a506488495d951d5263988d2591016040516020818303038152906040526040518663ffffffff1660e01b8152600401614ed2959493929190616627565b60408051808303816000875af1158015614ef0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614f14919061666e565b509050614e3a614e3582616692565b80471015614f8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401611d30565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114614fe7576040519150601f19603f3d011682016040523d82523d6000602084013e614fec565b606091505b5050905080613764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401611d30565b600060048210156150ba576040517fef356d7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50503590565b6000602082018310156150ff576040517fef356d7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b509190910135919050565b36600082841015615147576040517fef356d7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50509182019291900390565b60006040518260418114615172576040811461518c57600091506151cd565b604085013560001a602083015260408560408401376151cd565b60208501358060ff1c601b01602084015260208660408501377f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660608301525b508015615219577f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a16060820151101561521957848152600080526020600060808360015afa5060005191505b509392505050565b6000836001816152318686616386565b61523b919061639d565b6152459190616373565b61177091906166ca565b6000826152458584616386565b36600080600584600781111561527457615274616705565b901b90506152866101208601866165c2565b6152ab9161010088013580851c63ffffffff9081169360209290921b861c16916163b0565b92509250509250929050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82167f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1811015615219576040518581528360ff1c601b016020820152846040820152816060820152600080526020600060808360015afa505060005195945050505050565b600060018790036153cb576153548888614be6565b1561539957858514615392576040517f49986e7300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5082612c13565b6040517fbec74c8500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660006153da8b8b614a6d565b9250925092506000808473ffffffffffffffffffffffffffffffffffffffff1684848c8b8b604051602001615413959493929190616734565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261544b91616753565b600060405180830381855afa9150503d8060008114615486576040519150601f19603f3d011682016040523d82523d6000602084013e61548b565b606091505b509150915081158061549f57508051602014155b156154d6576040517f110b8e7300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808060200190518101906154ea9190616587565b95505050505050612c13565b60006040518481528360048201528260248201526020600060448360008a5af19150508015611770573d8015614cb857600160005114601f3d11169150614cc0565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211156155ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e206160448201527f6e20696e743235360000000000000000000000000000000000000000000000006064820152608401611d30565b5090565b6000808212156155ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f7369746976656044820152606401611d30565b73ffffffffffffffffffffffffffffffffffffffff8116811461195e57600080fd5b80356156878161565a565b919050565b60008083601f84011261569e57600080fd5b50813567ffffffffffffffff8111156156b657600080fd5b6020830191508360208260051b8501011115613ee557600080fd5b6000806000806000608086880312156156e957600080fd5b85356156f48161565a565b94506020860135935060408601359250606086013567ffffffffffffffff81111561571e57600080fd5b61572a8882890161568c565b969995985093965092949392505050565b60008060008060008060008060006101208a8c03121561575a57600080fd5b89356157658161565a565b985060208a01356157758161565a565b975060408a01356157858161565a565b965060608a01356157958161565a565b989b979a50959860808101359760a0820135975060c0820135965060e08201359550610100909101359350915050565b60008083601f8401126157d757600080fd5b50813567ffffffffffffffff8111156157ef57600080fd5b602083019150836020828501011115613ee557600080fd5b60008060008060008086880361014081121561582257600080fd5b873561582d8161565a565b965060e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561585f57600080fd5b5060208701945061010087013567ffffffffffffffff8082111561588257600080fd5b61588e8a838b016157c5565b90965094506101208901359150808211156158a857600080fd5b506158b589828a016157c5565b979a9699509497509295939492505050565b60008060008060008060008060c0898b0312156158e357600080fd5b88356158ee8161565a565b975060208901356158fe8161565a565b96506040890135955060608901359450608089013567ffffffffffffffff8082111561592957600080fd5b6159358c838d0161568c565b909650945060a08b013591508082111561594e57600080fd5b5061595b8b828c016157c5565b999c989b5096995094979396929594505050565b60006020828403121561598157600080fd5b5035919050565b6000610140828403121561599b57600080fd5b50919050565b6000602082840312156159b357600080fd5b813567ffffffffffffffff8111156159ca57600080fd5b61177084828501615988565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715615a4c57615a4c6159d6565b604052919050565b600060e08284031215615a6657600080fd5b60405160e0810181811067ffffffffffffffff82111715615a8957615a896159d6565b604052823581529050806020830135615aa18161565a565b60208201526040830135615ab48161565a565b60408201526060830135615ac78161565a565b60608201526080830135615ada8161565a565b8060808301525060a083013560a082015260c083013560c08201525092915050565b6000806000806101208587031215615b1357600080fd5b615b1d8686615a54565b935060e085013567ffffffffffffffff811115615b3957600080fd5b615b45878288016157c5565b959890975094956101000135949350505050565b600080600060408486031215615b6e57600080fd5b83359250602084013567ffffffffffffffff811115615b8c57600080fd5b615b98868287016157c5565b9497909650939450505050565b60008060408385031215615bb857600080fd5b8235615bc38161565a565b946020939093013593505050565b60008060008060006101408688031215615bea57600080fd5b615bf48787615a54565b945060e086013567ffffffffffffffff811115615c1057600080fd5b615c1c888289016157c5565b9095509350506101008601359150610120860135615c398161565a565b809150509295509295909350565b60008060008060008060008060c0898b031215615c6357600080fd5b883567ffffffffffffffff80821115615c7b57600080fd5b615c878c838d01615988565b995060208b0135915080821115615c9d57600080fd5b615ca98c838d016157c5565b909950975060408b0135915080821115615cc257600080fd5b50615ccf8b828c016157c5565b999c989b5096999698976060880135976080810135975060a0013595509350505050565b600060208284031215615d0557600080fd5b81356115068161565a565b6000806000806000806000610160888a031215615d2c57600080fd5b615d368989615a54565b965060e088013567ffffffffffffffff80821115615d5357600080fd5b615d5f8b838c016157c5565b90985096506101008a013595506101208a01359150615d7d8261565a565b9093506101408901359080821115615d9457600080fd5b50615da18a828b016157c5565b989b979a50959850939692959293505050565b600060208284031215615dc657600080fd5b813560ff8116811461150657600080fd5b600080600080600080600080610100898b031215615df457600080fd5b8835615dff8161565a565b97506020890135615e0f8161565a565b96506040890135615e1f8161565a565b979a96995096976060810135975060808101359660a0820135965060c0820135955060e0909101359350915050565b60006020808385031215615e6157600080fd5b823567ffffffffffffffff80821115615e7957600080fd5b818501915085601f830112615e8d57600080fd5b813581811115615e9f57615e9f6159d6565b8060051b9150615eb0848301615a05565b8181529183018401918481019088841115615eca57600080fd5b938501935b83851015614b2857843582529385019390850190615ecf565b6020808252825182820181905260009190848201906040850190845b81811015615f2057835183529284019291840191600101615f04565b50909695505050505050565b6000806000806101408587031215615f4357600080fd5b615f4d8686615a54565b9660e08601359650610100860135956101200135945092505050565b600080600060408486031215615f7e57600080fd5b8335615f898161565a565b9250602084013567ffffffffffffffff811115615b8c57600080fd5b60008060408385031215615fb857600080fd5b50508035926020909101359150565b60008060008060008060008060008060006101408c8e031215615fe957600080fd5b8b35615ff48161565a565b9a5060208c01356160048161565a565b995060408c01356160148161565a565b985060608c01356160248161565a565b975060808c0135965060a08c0135955060c08c0135945060e08c013593506101008c013592506101208c013567ffffffffffffffff81111561606557600080fd5b6160718e828f016157c5565b915080935050809150509295989b509295989b9093969950565b60008060008060008060008060008060006101008c8e0312156160ad57600080fd5b67ffffffffffffffff808d3511156160c457600080fd5b6160d18e8e358f01615988565b9b508060208e013511156160e457600080fd5b6160f48e60208f01358f016157c5565b909b50995060408d013581101561610a57600080fd5b61611a8e60408f01358f016157c5565b909950975060608d0135965060808d0135955060a08d0135945061614060c08e0161567c565b93508060e08e0135111561615357600080fd5b506161648d60e08e01358e016157c5565b81935080925050509295989b509295989b9093969950565b6000806000806060858703121561619257600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156161b757600080fd5b6161c38782880161568c565b95989497509550505050565b600080600080600080600080600060e08a8c0312156161ed57600080fd5b893567ffffffffffffffff8082111561620557600080fd5b6162118d838e01615988565b9a5060208c013591508082111561622757600080fd5b6162338d838e016157c5565b909a50985060408c013591508082111561624c57600080fd5b506162598c828d016157c5565b90975095505060608a0135935060808a0135925060a08a0135915060c08a01356162828161565a565b809150509295985092959850929598565b60008060008060008060a087890312156162ac57600080fd5b86356162b78161565a565b955060208701356162c78161565a565b94506040870135935060608701359250608087013567ffffffffffffffff8111156162f157600080fd5b6158b589828a0161568c565b6000806000806060858703121561631357600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561633857600080fd5b6161c3878288016157c5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561148957611489616344565b808202811582820484141761148957611489616344565b8082018082111561148957611489616344565b600080858511156163c057600080fd5b838611156163cd57600080fd5b5050820193919092039150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8183823760009101908152919050565b60005b8381101561643457818101518382015260200161641c565b50506000910152565b60008151808452616455816020860160208601616419565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b8215158152604060208201526000611770604083018461643d565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b888152600073ffffffffffffffffffffffffffffffffffffffff808a1660208401528089166040840152508660608301528560808301528460a083015260e060c083015261653d60e0830184866164a2565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff86168152846020820152836040820152608060608201526000612c136080830184866164a2565b60006020828403121561659957600080fd5b5051919050565b6000602082840312156165b257600080fd5b8151801515811461150657600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126165f757600080fd5b83018035915067ffffffffffffffff82111561661257600080fd5b602001915036819003821315613ee557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152612c1360a083018461643d565b6000806040838503121561668157600080fd5b505080516020909101519092909150565b60007f800000000000000000000000000000000000000000000000000000000000000082036166c3576166c3616344565b5060000390565b600082616700577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8486823790930191825260208201526040810191909152606001919050565b60008251616765818460208701616419565b919091019291505056fea26469706673582212206c93e7071108e761abc14f0379d4d462b9b9c46a23aace1475361cddfe66f86564736f6c63430008160033";

type AggregationRouterV5ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AggregationRouterV5ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AggregationRouterV5__factory extends ContractFactory {
  constructor(...args: AggregationRouterV5ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AggregationRouterV5> {
    return super.deploy(weth, overrides || {}) as Promise<AggregationRouterV5>;
  }
  override getDeployTransaction(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth, overrides || {});
  }
  override attach(address: string): AggregationRouterV5 {
    return super.attach(address) as AggregationRouterV5;
  }
  override connect(signer: Signer): AggregationRouterV5__factory {
    return super.connect(signer) as AggregationRouterV5__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AggregationRouterV5Interface {
    return new utils.Interface(_abi) as AggregationRouterV5Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AggregationRouterV5 {
    return new Contract(address, _abi, signerOrProvider) as AggregationRouterV5;
  }
}
