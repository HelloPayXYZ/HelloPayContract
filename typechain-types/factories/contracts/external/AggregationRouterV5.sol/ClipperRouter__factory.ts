/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ClipperRouter,
  ClipperRouterInterface,
} from "../../../../contracts/external/AggregationRouterV5.sol/ClipperRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EthDepositRejected",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "SafePermitBadLength",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFromFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IClipperExchangeInterface",
        name: "clipperExchange",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "dstToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "goodUntil",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
    ],
    name: "clipperSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IClipperExchangeInterface",
        name: "clipperExchange",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "dstToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "goodUntil",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
    ],
    name: "clipperSwapTo",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IClipperExchangeInterface",
        name: "clipperExchange",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "dstToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "goodUntil",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "clipperSwapToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610be8380380610be883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610b416100a76000396000818161013f01528181610207015281816103c901528181610504015261057e0152610b416000f3fe6080604052600436106100385760003560e01c8063093d4fa51461004c57806384bd6d2914610071578063c805a6661461008457600080fd5b36610047576100456100a4565b005b600080fd5b61005f61005a36600461091a565b6100df565b60405190815260200160405180910390f35b61005f61007f3660046109a4565b6106dc565b34801561009057600080fd5b5061005f61009f366004610a1b565b6106fc565b3233036100dd576040517f1b10b0f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff881615801561013d57863414610138576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102e4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff160361028a5750600134156101cb576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f23b872dd00000000000000000000000000000000000000000000000000000000808252336004830152306024830152604482018990527f0000000000000000000000000000000000000000000000000000000000000000917f2e1a7d4d000000000000000000000000000000000000000000000000000000009060008060648382885af1610260573d6000823e3d81fd5b8181528a60048201526000806024836000885af1610281573d6000823e3d81fd5b505050506102e4565b34156102c2576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102e473ffffffffffffffffffffffffffffffffffffffff8a16338d8a610740565b80156103a95760008b905060006327a9b42460e01b90506040518181528a60048201528960248201528860448201528760648201528c60848201528560ff1c601b0160a48201528660c48201527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff861660e48201526101206101048201527f0531494e43480000000000000000000000000000000000000000000000000000610143820152600080610149838d875af16103a1573d6000823e3d81fd5b5050506106cd565b73ffffffffffffffffffffffffffffffffffffffff8816158061041757507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16145b1561060a576040517f4cb6864c00000000000000000000000000000000000000000000000000000000808252600482018b90526024820189905260448201889052606482018790528c918a15600181146104765730608483015261047d565b8d60848301525b508560ff1c601b0160a48201528660c48201527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff861660e48201526101206101048201527f0531494e43480000000000000000000000000000000000000000000000000000610143820152600080610149836000875af1610501573d6000823e3d81fd5b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1603610603576040517fd0e30db0000000000000000000000000000000000000000000000000000000008082527f0000000000000000000000000000000000000000000000000000000000000000917fa9059cbb00000000000000000000000000000000000000000000000000000000906000806004838f885af16105d7573d6000823e3d81fd5b8181528f60048201528b60248201526000806044836000885af16105fe573d6000823e3d81fd5b505050505b50506106cd565b60008b90506000632b651a6c60e01b90506040518181528b60048201528a60248201528960448201528860648201528760848201528c60a48201528560ff1c601b0160c48201528660e48201527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff86166101048201526101406101248201527f0531494e43480000000000000000000000000000000000000000000000000000610163820152600080610169836000875af16106c9573d6000823e3d81fd5b5050505b50939998505050505050505050565b60006106ef89338a8a8a8a8a8a8a6100df565b9998505050505050505050565b600061071f73ffffffffffffffffffffffffffffffffffffffff8b1684846107dd565b6107308c8c8c8c8c8c8c8c8c6100df565b9c9b505050505050505050505050565b60006323b872dd60e01b905060006040518281528560048201528460248201528360448201526020600060648360008b5af1915050801561079e573d801561079457600160005114601f3d1116915061079c565b6000873b1191505b505b806107d5576040517ff405907100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b600060e082900361081b57610814847fd505accf000000000000000000000000000000000000000000000000000000008585610896565b9050610883565b61010082900361085157610814847f8fcbaf0c000000000000000000000000000000000000000000000000000000008585610896565b6040517f6827585700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80610890576108906108e9565b50505050565b6000816004016040518581528385600483013760206000838360008b5af19250505080156108e1573d80156108d757600160005114601f3d111691506108df565b6000863b1191505b505b949350505050565b6040513d6000823e3d81fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461091757600080fd5b50565b60008060008060008060008060006101208a8c03121561093957600080fd5b8935610944816108f5565b985060208a0135610954816108f5565b975060408a0135610964816108f5565b965060608a0135610974816108f5565b989b979a50959860808101359760a0820135975060c0820135965060e08201359550610100909101359350915050565b600080600080600080600080610100898b0312156109c157600080fd5b88356109cc816108f5565b975060208901356109dc816108f5565b965060408901356109ec816108f5565b979a96995096976060810135975060808101359660a0820135965060c0820135955060e0909101359350915050565b60008060008060008060008060008060006101408c8e031215610a3d57600080fd5b8b35610a48816108f5565b9a5060208c0135610a58816108f5565b995060408c0135610a68816108f5565b985060608c0135610a78816108f5565b975060808c0135965060a08c0135955060c08c0135945060e08c013593506101008c013592506101208c013567ffffffffffffffff80821115610aba57600080fd5b818e0191508e601f830112610ace57600080fd5b813581811115610add57600080fd5b8f6020828501011115610aef57600080fd5b6020830194508093505050509295989b509295989b909396995056fea26469706673582212207e2a12974baf02f0a87ed2815a51433bc1cfd9a5a8dfc740077899d4671a4a6164736f6c63430008160033";

type ClipperRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClipperRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClipperRouter__factory extends ContractFactory {
  constructor(...args: ClipperRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ClipperRouter> {
    return super.deploy(weth, overrides || {}) as Promise<ClipperRouter>;
  }
  override getDeployTransaction(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth, overrides || {});
  }
  override attach(address: string): ClipperRouter {
    return super.attach(address) as ClipperRouter;
  }
  override connect(signer: Signer): ClipperRouter__factory {
    return super.connect(signer) as ClipperRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClipperRouterInterface {
    return new utils.Interface(_abi) as ClipperRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClipperRouter {
    return new Contract(address, _abi, signerOrProvider) as ClipperRouter;
  }
}
