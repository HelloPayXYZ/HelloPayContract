/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PolyCoachIncentive,
  PolyCoachIncentiveInterface,
} from "../../../contracts/PolyCoachIncentive.sol/PolyCoachIncentive";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Mintable",
        name: "_pcToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "coach",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
    ],
    name: "ClaimedVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountsRewardsStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "claimedRewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fid",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "targetVaults",
        type: "address[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "complete",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "createNewCoach",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerRewardsDivisor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pcToken",
    outputs: [
      {
        internalType: "contract IERC20Mintable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "supervise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vaultsRewardsStatus",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isCompleted",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "totalDonors",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupervisors",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052678ac7230489e80000600355670de0b6b3a7640000600455683635c9adc5dea00000600555600a60065534801561003a57600080fd5b50604051610e0e380380610e0e83398101604081905261005991610122565b338061007f57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b610088816100ba565b50600280546001600160a01b039384166001600160a01b0319918216179091556001805492909316911617905561015c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461011f57600080fd5b50565b6000806040838503121561013557600080fd5b82516101408161010a565b60208401519092506101518161010a565b809150509250929050565b610ca38061016b6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063733112231161008c578063c45a015511610066578063c45a0155146102fe578063c9407a4a1461031e578063e67982f914610331578063f2fde38b1461035157600080fd5b8063733112231461025c5780638da5cb5b1461026f57806393af02921461028d57600080fd5b80635d21fbdc116100bd5780635d21fbdc146101765780636bad9d371461020f578063715018a61461025457600080fd5b80632b636d18146100e45780632eb7be1b1461010057806342eb9d9414610163575b600080fd5b6100ed60065481565b6040519081526020015b60405180910390f35b61016161010e3660046109cd565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260086020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b005b610161610171366004610a35565b610364565b6101d8610184366004610b2f565b60086020526000908152604090208054600182015460029092015473ffffffffffffffffffffffffffffffffffffffff8216927401000000000000000000000000000000000000000090920460ff16919084565b6040805173ffffffffffffffffffffffffffffffffffffffff909516855292151560208501529183015260608201526080016100f7565b60025461022f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f7565b6101616106f1565b61016161026a3660046109cd565b610705565b60005473ffffffffffffffffffffffffffffffffffffffff1661022f565b61016161029b366004610b2f565b73ffffffffffffffffffffffffffffffffffffffff16600090815260086020526040902080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b60015461022f9073ffffffffffffffffffffffffffffffffffffffff1681565b61016161032c366004610b53565b6107b7565b6100ed61033f366004610b2f565b60076020526000908152604090205481565b61016161035f366004610b2f565b61086a565b336000908152600760205260408120815b83518110156106405760006008600086848151811061039657610396610ba4565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160149054906101000a900460ff16156106375782600101600086848151811061040957610409610ba4565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff1682528101919091526040016000205460ff1661063757805460009073ffffffffffffffffffffffffffffffffffffffff1633036104b15760065460045483600201546104779190610c02565b60035484600101546104899190610c02565b6104939190610c1f565b61049d9190610c32565b6005546104aa9190610c1f565b9050610523565b33600090815260038301602052604090205460ff16156104ea5760045482600201546104dd9190610c02565b6104e79082610c1f565b90505b33600090815260048301602052604090205460ff16156105235760035482600101546105169190610c02565b6105209082610c1f565b90505b61052d8186610c1f565b9450600184600101600088868151811061054957610549610ba4565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558015610635577f98b713221032ac17051428afec3e8e2e28841c2c7f2a421eedeaf19be9c6f60333888886815181106105e1576105e1610ba4565b60200260200101518460405161062c949392919073ffffffffffffffffffffffffffffffffffffffff9485168152602081019390935292166040820152606081019190915260800190565b60405180910390a15b505b50600101610375565b5081156106eb576002546040517f40c10f190000000000000000000000000000000000000000000000000000000081523360048201526024810184905273ffffffffffffffffffffffffffffffffffffffff909116906340c10f1990604401600060405180830381600087803b1580156106b957600080fd5b505af11580156106cd573d6000803e3d6000fd5b50505050818160000160008282546106e59190610c1f565b90915550505b50505050565b6106f96108d3565b6107036000610926565b565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260086020908152604080832093851683526003840190915290205460ff166107b25773ffffffffffffffffffffffffffffffffffffffff82166000908152600382016020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600283018054919290916107ac908490610c1f565b90915550505b505050565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260086020908152604080832093871683526004840190915290205460ff166108635773ffffffffffffffffffffffffffffffffffffffff84166000908152600482016020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915582810180549192909161085d908490610c1f565b90915550505b5050505050565b6108726108d3565b73ffffffffffffffffffffffffffffffffffffffff81166108c7576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6108d081610926565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610703576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016108be565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff811681146108d057600080fd5b80356109c88161099b565b919050565b600080604083850312156109e057600080fd5b82356109eb8161099b565b915060208301356109fb8161099b565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215610a4857600080fd5b82359150602083013567ffffffffffffffff811115610a6657600080fd5b8301601f81018513610a7757600080fd5b803567ffffffffffffffff811115610a9157610a91610a06565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811067ffffffffffffffff82111715610adc57610adc610a06565b604052918252602081840181019290810188841115610afa57600080fd5b6020850194505b83851015610b2057610b12856109bd565b815260209485019401610b01565b50809450505050509250929050565b600060208284031215610b4157600080fd5b8135610b4c8161099b565b9392505050565b60008060008060808587031215610b6957600080fd5b8435610b748161099b565b93506020850135610b848161099b565b92506040850135610b948161099b565b9396929550929360600135925050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417610c1957610c19610bd3565b92915050565b80820180821115610c1957610c19610bd3565b600082610c68577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220ead28ff5712b8c1dbdbda96aa3ce0040b489a1d245b4ffd776d2f33e0171365764736f6c634300081a0033";

type PolyCoachIncentiveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolyCoachIncentiveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolyCoachIncentive__factory extends ContractFactory {
  constructor(...args: PolyCoachIncentiveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pcToken: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolyCoachIncentive> {
    return super.deploy(
      _pcToken,
      _factory,
      overrides || {}
    ) as Promise<PolyCoachIncentive>;
  }
  override getDeployTransaction(
    _pcToken: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pcToken, _factory, overrides || {});
  }
  override attach(address: string): PolyCoachIncentive {
    return super.attach(address) as PolyCoachIncentive;
  }
  override connect(signer: Signer): PolyCoachIncentive__factory {
    return super.connect(signer) as PolyCoachIncentive__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolyCoachIncentiveInterface {
    return new utils.Interface(_abi) as PolyCoachIncentiveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolyCoachIncentive {
    return new Contract(address, _abi, signerOrProvider) as PolyCoachIncentive;
  }
}
