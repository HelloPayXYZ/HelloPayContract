/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IOneInchAdapter,
  IOneInchAdapterInterface,
} from "../../../../contracts/interfaces/1inch/IOneInchAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callArgs",
        type: "bytes",
      },
    ],
    name: "decodeSwapData",
    outputs: [
      {
        internalType: "address",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "dstToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "srcReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "dstReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "flags",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callArgs",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amountMATIC",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IOneInchAdapter__factory {
  static readonly abi = _abi;
  static createInterface(): IOneInchAdapterInterface {
    return new utils.Interface(_abi) as IOneInchAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IOneInchAdapter {
    return new Contract(address, _abi, signerOrProvider) as IOneInchAdapter;
  }
}
