/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICurveCalculator,
  ICurveCalculatorInterface,
} from "../../../../contracts/interfaces/curve/ICurveCalculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int128",
        name: "i",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "j",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n_coins",
        type: "uint256",
      },
    ],
    name: "get_dx",
    outputs: [
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ICurveCalculator__factory {
  static readonly abi = _abi;
  static createInterface(): ICurveCalculatorInterface {
    return new utils.Interface(_abi) as ICurveCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICurveCalculator {
    return new Contract(address, _abi, signerOrProvider) as ICurveCalculator;
  }
}
