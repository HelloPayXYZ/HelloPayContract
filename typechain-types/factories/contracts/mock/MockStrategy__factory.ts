/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockStrategy,
  MockStrategyInterface,
} from "../../../contracts/mock/MockStrategy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "addLeverageAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "AddLeverage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "ClosePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "principalAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leverageAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "CreatePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "addLeverageAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "DepositAndAddLeverage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "removeLeverageAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "DepositAndRemoveLeverage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "removeLeverageAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "RemoveLeverage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "Repay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "addLeverageAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "WithdrawAndAddLeverage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "removeLeverageAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "WithdrawAndRemoveLeverage",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "addLeverageWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "addLeverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "borrowETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "calculatePositionStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "performance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "performanceFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPostionNetValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "closePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "addLeverageWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "createPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "addLeverageWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "depositAndAddLeverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "removeLeverageWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "depositAndRemoveLeverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "earnToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "addLeverageWstETH",
        type: "uint256",
      },
    ],
    name: "getAddLeverageInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "borrowETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "flashLoanFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGlobalInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "supplyRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getPositionInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCollateralBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalCollateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDebtBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDebtAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableBorrowsBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentLiquidationThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ltv",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "healthFactor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "removeLeverageWstETH",
        type: "uint256",
      },
    ],
    name: "getRemoveLeverageInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "flashLoanETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "flashLoanFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "removeLeverageWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "removeLeverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "repayETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_borrowToken",
        type: "address",
      },
    ],
    name: "setBorrowToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_earnToken",
        type: "address",
      },
    ],
    name: "setEarnToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "withdrawWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "withdrawWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "addLeverageWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "withdrawAndAddLeverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "withdrawWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "removeLeverageWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPositionNetValue",
        type: "uint256",
      },
    ],
    name: "withdrawAndRemoveLeverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610830806100206000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806362996232116100d8578063aef7e0961161008c578063e2bbb15811610066578063e2bbb158146103a9578063f1f98e12146103bc578063fbd1d25a146103dc57600080fd5b8063aef7e09614610339578063d8aed1451461038e578063dab680dc146103a157600080fd5b806390aebf30116100bd57806390aebf301461017c5780639811a2c414610313578063a126d6011461032657600080fd5b806362996232146102ed5780636affa6531461030057600080fd5b8063379da3f91161012f578063456dc17a11610114578063456dc17a1461024057806346676015146102855780635b96fe72146102da57600080fd5b8063379da3f91461021a578063441a3e701461022d57600080fd5b80631053851b116101605780631053851b146101c157806328be8aa2146101f457806332a77cd01461020757600080fd5b8063025869c51461017c5780630ecbcdab146101ac575b600080fd5b61019261018a366004610756565b600080915091565b604080519283526020830191909152015b60405180910390f35b6101bf6101ba36600461076f565b61043c565b005b6101d96101cf366004610791565b5060009081908190565b604080519384526020840192909252908201526060016101a3565b6101bf6102023660046107ce565b610482565b6101bf61021536600461076f565b6104d0565b6101bf6102283660046107ce565b61050e565b6101bf61023b36600461076f565b610553565b6001546102609073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a3565b6101bf610293366004610791565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6101bf6102e83660046107ce565b610591565b6101bf6102fb3660046107ce565b6105d6565b6101bf61030e3660046107ce565b61061b565b6101bf61032136600461076f565b610660565b6101bf610334366004610756565b61069e565b6101bf610347366004610791565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6101bf61039c36600461076f565b6106da565b600080610192565b6101bf6103b736600461076f565b610718565b6000546102609073ffffffffffffffffffffffffffffffffffffffff1681565b6104016103ea366004610791565b600080600080600080600080919395975091939597565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c083015260e0820152610100016101a3565b60408051328152602081018490529081018290527fe1979fe4c35e0cef342fef5668e2c8e7a7e9f5d5d1ca8fee0ac6c427fa4153af906060015b60405180910390a15050565b6040805132815260208101859052908101839052606081018290527f937dce53eedbdd209aeccd1380af4cb7bdbafc0975a2e9004a87710c92dbf838906080015b60405180910390a1505050565b60408051328152602081018490529081018290527fe40be10e9734f10be4cc7478f4157e602837bcebf8418fd004dccfc472b1338990606001610476565b6040805132815260208101859052908101839052606081018290527f9b30e45312bc1a4cda013b90f2d63bdbccaeaefaf382f8f12bcc2161acd288d8906080016104c3565b60408051328152602081018490529081018290527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56890606001610476565b6040805132815260208101859052908101839052606081018290527f7653725e161b651a98b4659ecc5d7b756e96d2b353356ce51031f4be1470f567906080016104c3565b6040805132815260208101859052908101839052606081018290527fb7de426b1a09492cb7a9eab8008884ea32ffda8e96db9354a28d0e6c8eb26b12906080016104c3565b6040805132815260208101859052908101839052606081018290527fa7e3c3a943d4329b7b2590350fec5f412fddc09294d202cb52292e49876b4854906080016104c3565b60408051328152602081018490529081018290527ff8c1cc3a3d63e473d4400d685cf225c97f20c083f02624edb8efd2ea8c2aee6290606001610476565b60408051328152602081018390527ff7c2a3d1045b210b525d6f8529b0e1e43af45cdaf6ad4e2947df9dea2c87f9ad910160405180910390a150565b60408051328152602081018490529081018290527f77c6871227e5d2dec8dadd5354f78453203e22e669cd0ec4c19d9a8c5edb31d090606001610476565b60408051328152602081018490529081018290527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1590606001610476565b60006020828403121561076857600080fd5b5035919050565b6000806040838503121561078257600080fd5b50508035926020909101359150565b6000602082840312156107a357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146107c757600080fd5b9392505050565b6000806000606084860312156107e357600080fd5b50508135936020830135935060409092013591905056fea2646970667358221220c995cfec5b380221731e7079eca4be4bfc33b995920d39df2b2f5726f1abf8c164736f6c63430008160033";

type MockStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockStrategy__factory extends ContractFactory {
  constructor(...args: MockStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockStrategy> {
    return super.deploy(overrides || {}) as Promise<MockStrategy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockStrategy {
    return super.attach(address) as MockStrategy;
  }
  override connect(signer: Signer): MockStrategy__factory {
    return super.connect(signer) as MockStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockStrategyInterface {
    return new utils.Interface(_abi) as MockStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockStrategy {
    return new Contract(address, _abi, signerOrProvider) as MockStrategy;
  }
}
