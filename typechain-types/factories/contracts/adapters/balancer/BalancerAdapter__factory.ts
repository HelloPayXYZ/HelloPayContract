/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BalancerAdapter,
  BalancerAdapterInterface,
} from "../../../../contracts/adapters/balancer/BalancerAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "flashFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC3156FlashBorrower",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "flashLoan",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "flashWithoutFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "maxFlashLoan",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "receiveFlashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052600080546001600160a01b031990811690915560018054909116905534801561002c57600080fd5b506040516114e93803806114e983398101604081905261004b9161005c565b6001600160a01b031660805261008c565b60006020828403121561006e57600080fd5b81516001600160a01b038116811461008557600080fd5b9392505050565b6080516114186100d160003960008181610100015281816102f4015281816103ae015281816104300152818161055b0152818161067f015261091901526114186000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063d9d98ce411610050578063d9d98ce4146100d3578063f04f2707146100e6578063fbfa77cf146100fb57600080fd5b80635cffe9de14610077578063613255ab1461009f5780636cdaf788146100c0575b600080fd5b61008a610085366004610f60565b610147565b60405190151581526020015b60405180910390f35b6100b26100ad366004610fd3565b610371565b604051908152602001610096565b6100b26100ce366004610ff0565b61042b565b6100b26100e1366004610ff0565b610556565b6100f96100f4366004611061565b610667565b005b6101227f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610096565b60015460009073ffffffffffffffffffffffffffffffffffffffff16156101cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f217265656e7472616e63792062616c616e63657241646170746572000000000060448201526064015b60405180910390fd5b6000805473ffffffffffffffffffffffffffffffffffffffff88167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161782556001805490911633178155604080518281528082019091529060208083019080368337019050509050858160008151811061024e5761024e611125565b73ffffffffffffffffffffffffffffffffffffffff929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905085816000815181106102ac576102ac611125565b60209081029190910101526040517f5c38449e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635c38449e90610331903090869086908b908b9060040161119d565b600060405180830381600087803b15801561034b57600080fd5b505af115801561035f573d6000803e3d6000fd5b5060019b9a5050505050505050505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152600091908316906370a0823190602401602060405180830381865afa158015610401573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104259190611252565b92915050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d2946c2b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bd919061126b565b905060008173ffffffffffffffffffffffffffffffffffffffff1663d877845c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561050c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105309190611252565b905061054d8461054883670de0b6b3a76400006112b7565b6109fa565b95945050505050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d2946c2b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e8919061126b565b905060008173ffffffffffffffffffffffffffffffffffffffff1663d877845c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065b9190611252565b905061054d8482610b11565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610706576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f64656e696564000000000000000000000000000000000000000000000000000060448201526064016101c6565b60015473ffffffffffffffffffffffffffffffffffffffff16610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f7265456e7472616e63650000000000000000000000000000000000000000000060448201526064016101c6565b61080860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16878760008181106107bc576107bc611125565b905060200201358a8a60008181106107d6576107d6611125565b90506020020160208101906107eb9190610fd3565b73ffffffffffffffffffffffffffffffffffffffff169190610be1565b6000805460015473ffffffffffffffffffffffffffffffffffffffff918216926323e30c8b92909116908b908b908161084357610843611125565b90506020020160208101906108589190610fd3565b8989600081811061086b5761086b611125565b905060200201358888600081811061088557610885611125565b9050602002013587876040518763ffffffff1660e01b81526004016108af969594939291906112ca565b6020604051808303816000875af11580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f29190611252565b506109bc60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000008686600081811061094b5761094b611125565b905060200201358989600081811061096557610965611125565b9050602002013561097691906112b7565b8b8b600081811061098957610989611125565b905060200201602081019061099e9190610fd3565b73ffffffffffffffffffffffffffffffffffffffff16929190610c67565b5050600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116909155600180549091169055505050505050565b600081600003610a66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f5a45524f5f4449564953494f4e0000000000000000000000000000000000000060448201526064016101c6565b6000610a7a670de0b6b3a764000085611310565b9050831580610a995750670de0b6b3a7640000610a978583611356565b145b610aff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4449565f494e5445524e414c000000000000000000000000000000000000000060448201526064016101c6565b610b098382611356565b949350505050565b6000828202831580610b31575082848281610b2e57610b2e611327565b04145b610b97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6f766572666c6f7700000000000000000000000000000000000000000000000060448201526064016101c6565b80600003610ba9576000915050610425565b670de0b6b3a76400007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820104600101915050610425565b60405173ffffffffffffffffffffffffffffffffffffffff838116602483015260448201839052610c6291859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610cb3565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff8481166024830152838116604483015260648201839052610cad9186918216906323b872dd90608401610c1b565b50505050565b6000610cd573ffffffffffffffffffffffffffffffffffffffff841683610d49565b90508051600014158015610cfa575080806020019051810190610cf89190611391565b155b15610c62576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016101c6565b6060610d5783836000610d5e565b9392505050565b606081471015610d9c576040517fcd7860590000000000000000000000000000000000000000000000000000000081523060048201526024016101c6565b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610dc591906113b3565b60006040518083038185875af1925050503d8060008114610e02576040519150601f19603f3d011682016040523d82523d6000602084013e610e07565b606091505b5091509150610e17868383610e21565b9695505050505050565b606082610e3657610e3182610eb0565b610d57565b8151158015610e5a575073ffffffffffffffffffffffffffffffffffffffff84163b155b15610ea9576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016101c6565b5080610d57565b805115610ec05780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b73ffffffffffffffffffffffffffffffffffffffff81168114610ef257600080fd5b60008083601f840112610f2957600080fd5b50813567ffffffffffffffff811115610f4157600080fd5b602083019150836020828501011115610f5957600080fd5b9250929050565b600080600080600060808688031215610f7857600080fd5b8535610f8381610ef5565b94506020860135610f9381610ef5565b935060408601359250606086013567ffffffffffffffff811115610fb657600080fd5b610fc288828901610f17565b969995985093965092949392505050565b600060208284031215610fe557600080fd5b8135610d5781610ef5565b6000806040838503121561100357600080fd5b823561100e81610ef5565b946020939093013593505050565b60008083601f84011261102e57600080fd5b50813567ffffffffffffffff81111561104657600080fd5b6020830191508360208260051b8501011115610f5957600080fd5b6000806000806000806000806080898b03121561107d57600080fd5b883567ffffffffffffffff8082111561109557600080fd5b6110a18c838d0161101c565b909a50985060208b01359150808211156110ba57600080fd5b6110c68c838d0161101c565b909850965060408b01359150808211156110df57600080fd5b6110eb8c838d0161101c565b909650945060608b013591508082111561110457600080fd5b506111118b828c01610f17565b999c989b5096995094979396929594505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60006080820173ffffffffffffffffffffffffffffffffffffffff8089168452602060808186015282895180855260a087019150828b01945060005b818110156111f75785518516835294830194918301916001016111d9565b5050858103604087015288518082529082019350915080880160005b8381101561122f57815185529382019390820190600101611213565b505050508281036060840152611246818587611154565b98975050505050505050565b60006020828403121561126457600080fd5b5051919050565b60006020828403121561127d57600080fd5b8151610d5781610ef5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561042557610425611288565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401525085604083015284606083015260a0608083015261124660a083018486611154565b808202811582820484141761042557610425611288565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261138c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000602082840312156113a357600080fd5b81518015158114610d5757600080fd5b6000825160005b818110156113d457602081860181015185830152016113ba565b50600092019182525091905056fea26469706673582212209694b2ec1bcce2e88a8db81db9ac835b2f9f400b5dfc1ec4ffeceb512e36051864736f6c63430008160033";

type BalancerAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerAdapter__factory extends ContractFactory {
  constructor(...args: BalancerAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BalancerAdapter> {
    return super.deploy(_vault, overrides || {}) as Promise<BalancerAdapter>;
  }
  override getDeployTransaction(
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  override attach(address: string): BalancerAdapter {
    return super.attach(address) as BalancerAdapter;
  }
  override connect(signer: Signer): BalancerAdapter__factory {
    return super.connect(signer) as BalancerAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerAdapterInterface {
    return new utils.Interface(_abi) as BalancerAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerAdapter {
    return new Contract(address, _abi, signerOrProvider) as BalancerAdapter;
  }
}
