/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProxyWalletImplement,
  ProxyWalletImplementInterface,
} from "../../../contracts/wallets/ProxyWalletImplement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_spenders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "approveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callBytes",
        type: "bytes",
      },
    ],
    name: "callStrategy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategyManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool[]",
        name: "_callType",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "_callArgs",
        type: "bytes[]",
      },
    ],
    name: "multiCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "walletFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611f79806100206000396000f3fe6080604052600436106100e85760003560e01c8063887d37971161008a578063c5c0369911610059578063c5c03699146102d6578063e1f21c6714610303578063f2fde38b14610323578063f3fef3a31461034357600080fd5b8063887d3797146102395780638da5cb5b14610259578063ac6aafe7146102a3578063b6e87151146102b657600080fd5b806347e7ef24116100c657806347e7ef24146101c2578063485cc955146101e457806368a9674d14610204578063715018a61461022457600080fd5b80630d8e6e2c146100ed57806323e30c8b1461014257806339b70e3814610170575b600080fd5b3480156100f957600080fd5b50604080518082018252600481527f76302e31000000000000000000000000000000000000000000000000000000006020820152905161013991906117b1565b60405180910390f35b34801561014e57600080fd5b5061016261015d366004611824565b610363565b604051908152602001610139565b34801561017c57600080fd5b5060015461019d9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610139565b3480156101ce57600080fd5b506101e26101dd3660046118ce565b6104c0565b005b3480156101f057600080fd5b506101e26101ff3660046118fa565b6105cb565b34801561021057600080fd5b506101e261021f366004611933565b61079a565b34801561023057600080fd5b506101e2610868565b34801561024557600080fd5b506101e2610254366004611aed565b61087c565b34801561026557600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff1661019d565b6101e26102b1366004611c6a565b610a2b565b3480156102c257600080fd5b506101e26102d1366004611d35565b610cde565b3480156102e257600080fd5b5060005461019d9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561030f57600080fd5b506101e261031e366004611933565b610d8f565b34801561032f57600080fd5b506101e261033e366004611df7565b610e57565b34801561034f57600080fd5b506101e261035e3660046118ce565b610ebb565b6000326103a47f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff161480156103dc57503073ffffffffffffffffffffffffffffffffffffffff8816145b610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f496e69746961746f7220766572696669636174696f6e206661696c65642e000060448201526064015b60405180910390fd5b60008061045684860186611d35565b915091506104648282610fc1565b8761049133610473898b611e14565b73ffffffffffffffffffffffffffffffffffffffff84169190611020565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99998505050505050505050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610567576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f50726f787957616c6c6574496d706c656d656e743a204e6f7420616c6c6f772060448201527f6164647265737320746f2063616c6c6261636b2e000000000000000000000000606482015260840161043e565b6105c76105a87f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff841690308461113b565b5050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156106165750825b905060008267ffffffffffffffff1660011480156106335750303b155b905081158015610641575080155b15610678576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016600117855583156106d95784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b6106e287611181565b6001805473ffffffffffffffffffffffffffffffffffffffff88167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600080549091163317905583156107915784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610841576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f50726f787957616c6c6574496d706c656d656e743a204e6f7420616c6c6f772060448201527f6164647265737320746f2063616c6c6261636b2e000000000000000000000000606482015260840161043e565b61086373ffffffffffffffffffffffffffffffffffffffff841683308461113b565b505050565b610870611192565b61087a6000611220565b565b60025473ffffffffffffffffffffffffffffffffffffffff163314610923576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f50726f787957616c6c6574496d706c656d656e743a204e6f7420616c6c6f772060448201527f6164647265737320746f2063616c6c6261636b2e000000000000000000000000606482015260840161043e565b80518351148015610935575080518251145b61099b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f617070726f7665206c656e677468206572726f722e0000000000000000000000604482015260640161043e565b60005b8351811015610a2557610a1d8382815181106109bc576109bc611e4e565b60200260200101518383815181106109d6576109d6611e4e565b60200260200101518684815181106109f0576109f0611e4e565b602002602001015173ffffffffffffffffffffffffffffffffffffffff166110209092919063ffffffff16565b60010161099e565b50505050565b33610a6a7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff161480610aa3575060005473ffffffffffffffffffffffffffffffffffffffff1633145b610b2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f50726f787957616c6c6574496d706c656d656e743a204e6f7420616c6c6f772060448201527f6164647265737320746f2063616c6c6261636b2e000000000000000000000000606482015260840161043e565b600081806020019051810190610b459190611e7d565b506001546040517fc02d172700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808416600483015292935091169063c02d172790602401602060405180830381865afa158015610bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdc9190611f0a565b610c68576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f50726f787957616c6c6574496d706c656d656e743a20496e7661696c6420737460448201527f7261746567792e00000000000000000000000000000000000000000000000000606482015260840161043e565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316179055610cb1826112b6565b5050600280547fffffffffffffffffffffffff000000000000000000000000000000000000000016905550565b60025473ffffffffffffffffffffffffffffffffffffffff163314610d85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f50726f787957616c6c6574496d706c656d656e743a204e6f7420616c6c6f772060448201527f6164647265737320746f2063616c6c6261636b2e000000000000000000000000606482015260840161043e565b6105c78282610fc1565b60025473ffffffffffffffffffffffffffffffffffffffff163314610e36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f50726f787957616c6c6574496d706c656d656e743a204e6f7420616c6c6f772060448201527f6164647265737320746f2063616c6c6261636b2e000000000000000000000000606482015260840161043e565b61086373ffffffffffffffffffffffffffffffffffffffff84168383611020565b610e5f611192565b73ffffffffffffffffffffffffffffffffffffffff8116610eaf576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526000600482015260240161043e565b610eb881611220565b50565b60025473ffffffffffffffffffffffffffffffffffffffff163314610f62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f50726f787957616c6c6574496d706c656d656e743a204e6f7420616c6c6f772060448201527f6164647265737320746f2063616c6c6261636b2e000000000000000000000000606482015260840161043e565b6105c7610fa37f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff84169083611386565b8051825114610fcf57600080fd5b60005b815181101561086357611017828281518110610ff057610ff0611e4e565b602002602001015184838151811061100a5761100a611e4e565b60200260200101516113c4565b50600101610fd2565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790526110ac84826113e9565b610a255760405173ffffffffffffffffffffffffffffffffffffffff84811660248301526000604483015261113191869182169063095ea7b3906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506114ad565b610a2584826114ad565b60405173ffffffffffffffffffffffffffffffffffffffff8481166024830152838116604483015260648201839052610a259186918216906323b872dd906084016110ea565b611189611543565b610eb8816115aa565b336111d17f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff161461087a576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161043e565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080547fffffffffffffffffffffffff0000000000000000000000000000000000000000811673ffffffffffffffffffffffffffffffffffffffff848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6060600080838060200190518101906112cf9190611e7d565b915091506000808373ffffffffffffffffffffffffffffffffffffffff16836040516112fb9190611f27565b6000604051808303816000865af19150503d8060008114611338576040519150601f19603f3d011682016040523d82523d6000602084013e61133d565b606091505b509150915081819061137c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043e91906117b1565b5095945050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83811660248301526044820183905261086391859182169063a9059cbb906064016110ea565b6060816113d9576113d4836112b6565b6113e2565b6113e2836115b2565b9392505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff16846040516114139190611f27565b6000604051808303816000865af19150503d8060008114611450576040519150601f19603f3d011682016040523d82523d6000602084013e611455565b606091505b509150915081801561147f57508051158061147f57508080602001905181019061147f9190611f0a565b80156114a2575060008573ffffffffffffffffffffffffffffffffffffffff163b115b925050505b92915050565b60006114cf73ffffffffffffffffffffffffffffffffffffffff841683611632565b905080516000141580156114f45750808060200190518101906114f29190611f0a565b155b15610863576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260240161043e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff1661087a576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e5f611543565b6060600080838060200190518101906115cb9190611e7d565b915091506000808373ffffffffffffffffffffffffffffffffffffffff16836040516115f79190611f27565b600060405180830381855af49150503d8060008114611338576040519150601f19603f3d011682016040523d82523d6000602084013e61133d565b60606113e283836000846000808573ffffffffffffffffffffffffffffffffffffffff1684866040516116659190611f27565b60006040518083038185875af1925050503d80600081146116a2576040519150601f19603f3d011682016040523d82523d6000602084013e6116a7565b606091505b50915091506116b78683836116c1565b9695505050505050565b6060826116d1576113d48261174b565b81511580156116f5575073ffffffffffffffffffffffffffffffffffffffff84163b155b15611744576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260240161043e565b50806113e2565b80511561175b5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b838110156117a8578181015183820152602001611790565b50506000910152565b60208152600082518060208401526117d081604085016020870161178d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff81168114610eb857600080fd5b60008060008060008060a0878903121561183d57600080fd5b863561184881611802565b9550602087013561185881611802565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561188357600080fd5b818901915089601f83011261189757600080fd5b8135818111156118a657600080fd5b8a60208285010111156118b857600080fd5b6020830194508093505050509295509295509295565b600080604083850312156118e157600080fd5b82356118ec81611802565b946020939093013593505050565b6000806040838503121561190d57600080fd5b823561191881611802565b9150602083013561192881611802565b809150509250929050565b60008060006060848603121561194857600080fd5b833561195381611802565b9250602084013561196381611802565b929592945050506040919091013590565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156119ea576119ea611974565b604052919050565b600067ffffffffffffffff821115611a0c57611a0c611974565b5060051b60200190565b600082601f830112611a2757600080fd5b81356020611a3c611a37836119f2565b6119a3565b8083825260208201915060208460051b870101935086841115611a5e57600080fd5b602086015b84811015611a83578035611a7681611802565b8352918301918301611a63565b509695505050505050565b600082601f830112611a9f57600080fd5b81356020611aaf611a37836119f2565b8083825260208201915060208460051b870101935086841115611ad157600080fd5b602086015b84811015611a835780358352918301918301611ad6565b600080600060608486031215611b0257600080fd5b833567ffffffffffffffff80821115611b1a57600080fd5b818601915086601f830112611b2e57600080fd5b81356020611b3e611a37836119f2565b82815260059290921b8401810191818101908a841115611b5d57600080fd5b948201945b83861015611b84578535611b7581611802565b82529482019490820190611b62565b97505087013592505080821115611b9a57600080fd5b611ba687838801611a16565b93506040860135915080821115611bbc57600080fd5b50611bc986828701611a8e565b9150509250925092565b600067ffffffffffffffff821115611bed57611bed611974565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112611c2a57600080fd5b8135611c38611a3782611bd3565b818152846020838601011115611c4d57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611c7c57600080fd5b813567ffffffffffffffff811115611c9357600080fd5b611c9f84828501611c19565b949350505050565b8015158114610eb857600080fd5b600082601f830112611cc657600080fd5b81356020611cd6611a37836119f2565b82815260059290921b84018101918181019086841115611cf557600080fd5b8286015b84811015611a8357803567ffffffffffffffff811115611d195760008081fd5b611d278986838b0101611c19565b845250918301918301611cf9565b60008060408385031215611d4857600080fd5b823567ffffffffffffffff80821115611d6057600080fd5b818501915085601f830112611d7457600080fd5b81356020611d84611a37836119f2565b82815260059290921b84018101918181019089841115611da357600080fd5b948201945b83861015611dca578535611dbb81611ca7565b82529482019490820190611da8565b96505086013592505080821115611de057600080fd5b50611ded85828601611cb5565b9150509250929050565b600060208284031215611e0957600080fd5b81356113e281611802565b808201808211156114a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008060408385031215611e9057600080fd5b8251611e9b81611802565b602084015190925067ffffffffffffffff811115611eb857600080fd5b8301601f81018513611ec957600080fd5b8051611ed7611a3782611bd3565b818152866020838501011115611eec57600080fd5b611efd82602083016020860161178d565b8093505050509250929050565b600060208284031215611f1c57600080fd5b81516113e281611ca7565b60008251611f3981846020870161178d565b919091019291505056fea264697066735822122091edcd09a7675d1a299f428bf54c1e58031ad5ec47aba39f8d8404389ee3314764736f6c63430008160033";

type ProxyWalletImplementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyWalletImplementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyWalletImplement__factory extends ContractFactory {
  constructor(...args: ProxyWalletImplementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxyWalletImplement> {
    return super.deploy(overrides || {}) as Promise<ProxyWalletImplement>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProxyWalletImplement {
    return super.attach(address) as ProxyWalletImplement;
  }
  override connect(signer: Signer): ProxyWalletImplement__factory {
    return super.connect(signer) as ProxyWalletImplement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyWalletImplementInterface {
    return new utils.Interface(_abi) as ProxyWalletImplementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyWalletImplement {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProxyWalletImplement;
  }
}
