/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProxyWalletFactory,
  ProxyWalletFactoryInterface,
} from "../../../contracts/wallets/ProxyWalletFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyWalletImplement",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategyManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "CreateWallet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldProxyWalletImplement",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newProxyWalletImplement",
        type: "address",
      },
    ],
    name: "UpdateImplement",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_depositWstETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_addLeverageWstETH",
        type: "uint256",
      },
    ],
    name: "createAccount",
    outputs: [
      {
        internalType: "address",
        name: "newAccount",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getImplement",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyWalletImplement",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyWalletImplement",
        type: "address",
      },
    ],
    name: "setNewWalletImplement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userWallets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001805534801561001457600080fd5b506040516122643803806122648339810160408190526100339161010b565b338061005957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100628161009f565b50600280546001600160a01b03199081163317909155600380546001600160a01b039485169083161790556004805492909316911617905561013e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461010657600080fd5b919050565b6000806040838503121561011e57600080fd5b610127836100ef565b9150610135602084016100ef565b90509250929050565b6121178061014d6000396000f3fe608060405260043610620000cb5760003560e01c8063715018a6116200007d57806390bcd46f116200005457806390bcd46f146200025c578063c0d84f5c1462000281578063f2fde38b14620002b057600080fd5b8063715018a614620001e857806379e6265f14620002025780638da5cb5b146200022f57600080fd5b806354fd4d5011620000b257806354fd4d5014620001585780636f2e6431146200017f578063707a2756146200019657600080fd5b806339b70e3814620000d05780633e47158c1462000129575b600080fd5b348015620000dd57600080fd5b50600454620000ff9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156200013657600080fd5b50600254620000ff9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156200016557600080fd5b506200017060015481565b60405190815260200162000120565b620000ff6200019036600462000ba3565b620002d5565b348015620001a357600080fd5b50620000ff620001b536600462000bdb565b600560209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b348015620001f557600080fd5b506200020062000570565b005b3480156200020f57600080fd5b5060035473ffffffffffffffffffffffffffffffffffffffff16620000ff565b3480156200023c57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff16620000ff565b3480156200026957600080fd5b50620002006200027b36600462000c19565b62000588565b3480156200028e57600080fd5b50600354620000ff9073ffffffffffffffffffffffffffffffffffffffff1681565b348015620002bd57600080fd5b5062000200620002cf36600462000c19565b62000618565b33600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff8781168552925282205416156200039a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f50726f787957616c6c6574466163746f72793a20416c7265616479204578697360448201527f740000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600480546040517fc02d172700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781169382019390935291169063c02d172790602401602060405180830381865afa1580156200040d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000433919062000c40565b6200049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e6f7420416c6c6f772073747261746567790000000000000000000000000000604482015260640162000391565b620004a562000682565b33600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff8981168552925290912080547fffffffffffffffffffffffff000000000000000000000000000000000000000016918316919091179055905062000513818585856200078e565b6040805133815273ffffffffffffffffffffffffffffffffffffffff868116602083015283168183015290517f739fd34ad43eea3b27cda1afdc50120004fd834ff4d15d19546504205912f6a69181900360600190a19392505050565b6200057a62000aa8565b62000586600062000afd565b565b6200059262000aa8565b6003805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604080519190921680825260208201939093527f2b1e32e7fa5bfcca06ad81a975c432b9d5c33f24e00124a9d16221b3a84e08b8910160405180910390a15050565b6200062262000aa8565b73ffffffffffffffffffffffffffffffffffffffff811662000674576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526000600482015260240162000391565b6200067f8162000afd565b50565b60045460405133602482015273ffffffffffffffffffffffffffffffffffffffff90911660448201526000908190606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f485cc95500000000000000000000000000000000000000000000000000000000179052905060006200074d60005473ffffffffffffffffffffffffffffffffffffffff1690565b826040516200075c9062000b72565b6200076992919062000cca565b604051809103906000f08015801562000786573d6000803e3d6000fd5b509392505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663f1f98e126040518163ffffffff1660e01b8152600401602060405180830381865afa158015620007dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000802919062000d03565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810185905290915073ffffffffffffffffffffffffffffffffffffffff8216906323b872dd906064016020604051808303816000875af11580156200087f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a5919062000c40565b506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301526024820185905282169063095ea7b3906044016020604051808303816000875af11580156200091c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000942919062000c40565b506040516024810184905260448101839052600090606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fd1aaef05000000000000000000000000000000000000000000000000000000001790529051919250600091620009e991889185910162000cca565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527fac6aafe7000000000000000000000000000000000000000000000000000000008252915073ffffffffffffffffffffffffffffffffffffffff88169063ac6aafe79062000a6b90849060040162000d23565b600060405180830381600087803b15801562000a8657600080fd5b505af115801562000a9b573d6000803e3d6000fd5b5050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331462000586576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240162000391565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6113a98062000d3983390190565b73ffffffffffffffffffffffffffffffffffffffff811681146200067f57600080fd5b60008060006060848603121562000bb957600080fd5b833562000bc68162000b80565b95602085013595506040909401359392505050565b6000806040838503121562000bef57600080fd5b823562000bfc8162000b80565b9150602083013562000c0e8162000b80565b809150509250929050565b60006020828403121562000c2c57600080fd5b813562000c398162000b80565b9392505050565b60006020828403121562000c5357600080fd5b8151801515811462000c3957600080fd5b6000815180845260005b8181101562000c8c5760208185018101518683018201520162000c6e565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600062000cfb604083018462000c64565b949350505050565b60006020828403121562000d1657600080fd5b815162000c398162000b80565b60208152600062000c39602083018462000c6456fe60a0604052604051620013a9380380620013a983398101604081905262000026916200048a565b336001600160a01b03166379e6265f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000065573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200008b919062000558565b828282816200009b828262000156565b505081604051620000ac9062000423565b6001600160a01b039091168152602001604051809103906000f080158015620000d9573d6000803e3d6000fd5b506001600160a01b0316608052620000fa620000f460805190565b620001bc565b505050336200012f7fc939928770259e87a1a5e0e32598d8b0f832576a3eab42cc70c12a8e8b8e74296200022e60201b60201c565b80546001600160a01b0319166001600160a01b039290921691909117905550620005949050565b620001618262000231565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115620001ae57620001a98282620002b1565b505050565b620001b86200032e565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620001fe60008051602062001389833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a16200022b8162000350565b50565b90565b806001600160a01b03163b6000036200026d57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b031684604051620002d0919062000576565b600060405180830381855af49150503d80600081146200030d576040519150601f19603f3d011682016040523d82523d6000602084013e62000312565b606091505b5090925090506200032585838362000393565b95945050505050565b34156200034e5760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b0381166200037c57604051633173bdd160e11b81526000600482015260240162000264565b806000805160206200138983398151915262000290565b606082620003ac57620003a682620003f9565b620003f2565b8151158015620003c457506001600160a01b0384163b155b15620003ef57604051639996b31560e01b81526001600160a01b038516600482015260240162000264565b50805b9392505050565b8051156200040a5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b61065d8062000d2c83390190565b80516001600160a01b03811681146200044957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200048157818101518382015260200162000467565b50506000910152565b600080604083850312156200049e57600080fd5b620004a98362000431565b60208401519092506001600160401b0380821115620004c757600080fd5b818501915085601f830112620004dc57600080fd5b815181811115620004f157620004f16200044e565b604051601f8201601f19908116603f011681019083821181831017156200051c576200051c6200044e565b816040528281528860208487010111156200053657600080fd5b6200054983602083016020880162000464565b80955050505050509250929050565b6000602082840312156200056b57600080fd5b620003f28262000431565b600082516200058a81846020870162000464565b9190910192915050565b60805161077d620005af600039600060ab015261077d6000f3fe6080604052600436106100225760003560e01c80638b3240a01461006b57610061565b3661006157604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874910160405180910390a1005b6100696100a9565b005b34801561007757600080fd5b50610080610175565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16330361016d576000357fffffffff00000000000000000000000000000000000000000000000000000000167f4f1ef2860000000000000000000000000000000000000000000000000000000014610163576040517fd2b576ec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61016b6101ba565b565b61016b6101e9565b60006101b57fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6000806101ca366004818461059e565b8101906101d79190610619565b915091506101e582826101f9565b5050565b61016b6101f4610261565b610314565b61020282610338565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561025957610254828261040c565b505050565b6101e561048f565b7fc939928770259e87a1a5e0e32598d8b0f832576a3eab42cc70c12a8e8b8e742954604080517f79e6265f000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff16916379e6265f9160048083019260209291908290030181865afa1580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b591906106fb565b3660008037600080366000845af43d6000803e808015610333573d6000f35b3d6000fd5b8073ffffffffffffffffffffffffffffffffffffffff163b6000036103a6576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516104369190610718565b600060405180830381855af49150503d8060008114610471576040519150601f19603f3d011682016040523d82523d6000602084013e610476565b606091505b50915091506104868583836104c7565b95945050505050565b341561016b576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826104dc576104d782610559565b610552565b8151158015610500575073ffffffffffffffffffffffffffffffffffffffff84163b155b1561054f576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260240161039d565b50805b9392505050565b8051156105695780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600080858511156105ae57600080fd5b838611156105bb57600080fd5b5050820193919092039150565b73ffffffffffffffffffffffffffffffffffffffff8116811461059b57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561062c57600080fd5b8235610637816105c8565b9150602083013567ffffffffffffffff8082111561065457600080fd5b818501915085601f83011261066857600080fd5b81358181111561067a5761067a6105ea565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156106c0576106c06105ea565b816040528281528860208487010111156106d957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561070d57600080fd5b8151610552816105c8565b6000825160005b81811015610739576020818601810151858301520161071f565b50600092019182525091905056fea26469706673582212208a70e81ae1fec16c69cb09005d0df209bd8b3db03f65fade93339975aa3be92764736f6c63430008160033608060405234801561001057600080fd5b5060405161065d38038061065d83398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610560806100fd6000396000f3fe60806040526004361061005a5760003560e01c80639623609d116100435780639623609d146100b0578063ad3cb1cc146100c3578063f2fde38b1461011957600080fd5b8063715018a61461005f5780638da5cb5b14610076575b600080fd5b34801561006b57600080fd5b50610074610139565b005b34801561008257600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100746100be366004610364565b61014d565b3480156100cf57600080fd5b5061010c6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516100a791906104bc565b34801561012557600080fd5b506100746101343660046104d6565b6101e2565b61014161024b565b61014b600061029e565b565b61015561024b565b6040517f4f1ef28600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690634f1ef2869034906101ab90869086906004016104f3565b6000604051808303818588803b1580156101c457600080fd5b505af11580156101d8573d6000803e3d6000fd5b5050505050505050565b6101ea61024b565b73ffffffffffffffffffffffffffffffffffffffff811661023f576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6102488161029e565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461014b576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610236565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff8116811461024857600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006060848603121561037957600080fd5b833561038481610313565b9250602084013561039481610313565b9150604084013567ffffffffffffffff808211156103b157600080fd5b818601915086601f8301126103c557600080fd5b8135818111156103d7576103d7610335565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561041d5761041d610335565b8160405282815289602084870101111561043657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000815180845260005b8181101561047e57602081850181015186830182015201610462565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006104cf6020830184610458565b9392505050565b6000602082840312156104e857600080fd5b81356104cf81610313565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015260006105226040830184610458565b94935050505056fea26469706673582212206682e0fa42c4df56ccbca20a6e9ab4ef48f5153c4e09b72f5bf3852a72deb78f64736f6c63430008160033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103a26469706673582212207773e33fa7a62dfcf41fcb7f284fb94eaeef79ee50ac20bddabe4a5c9604a25464736f6c63430008160033";

type ProxyWalletFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyWalletFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyWalletFactory__factory extends ContractFactory {
  constructor(...args: ProxyWalletFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _proxyWalletImplement: PromiseOrValue<string>,
    _strategyManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxyWalletFactory> {
    return super.deploy(
      _proxyWalletImplement,
      _strategyManager,
      overrides || {}
    ) as Promise<ProxyWalletFactory>;
  }
  override getDeployTransaction(
    _proxyWalletImplement: PromiseOrValue<string>,
    _strategyManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _proxyWalletImplement,
      _strategyManager,
      overrides || {}
    );
  }
  override attach(address: string): ProxyWalletFactory {
    return super.attach(address) as ProxyWalletFactory;
  }
  override connect(signer: Signer): ProxyWalletFactory__factory {
    return super.connect(signer) as ProxyWalletFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyWalletFactoryInterface {
    return new utils.Interface(_abi) as ProxyWalletFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyWalletFactory {
    return new Contract(address, _abi, signerOrProvider) as ProxyWalletFactory;
  }
}
